---
export const prerender = true;

import { getCollection } from 'astro:content';

const discoveries = await getCollection('discoveries');
discoveries.sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime());

function formatRelativeTime(date: Date): string {
  const now = new Date();
  const diffInMinutes = Math.floor((now.getTime() - date.getTime()) / (1000 * 60));
  
  if (diffInMinutes < 60) {
    return `${diffInMinutes} min ago`;
  } else if (diffInMinutes < 1440) {
    return `${Math.floor(diffInMinutes / 60)} hours ago`;
  } else {
    return `${Math.floor(diffInMinutes / 1440)} days ago`;
  }
}

// Function to extract standalone URLs from markdown content
function extractStandaloneUrls(content: string): Array<{url: string, type: string}> {
  const lines = content.split('\n');
  const urlRegex = /^https?:\/\/[^\s]+$/;
  const standaloneUrls: Array<{url: string, type: string}> = [];
  
  for (const line of lines) {
    const trimmed = line.trim();
    if (urlRegex.test(trimmed)) {
      const type = detectUrlType(trimmed);
      standaloneUrls.push({ url: trimmed, type });
    }
  }
  
  return standaloneUrls;
}

// Function to detect the type of URL for appropriate embedding
function detectUrlType(url: string): string {
  const urlLower = url.toLowerCase();
  
  // YouTube detection
  if (urlLower.includes('youtube.com/watch') || urlLower.includes('youtu.be/')) {
    return 'youtube';
  }
  
  // Spotify detection
  if (urlLower.includes('spotify.com/')) {
    return 'spotify';
  }
  
  // Twitter/X detection
  if (urlLower.includes('twitter.com/') || urlLower.includes('x.com/')) {
    return 'twitter';
  }
  
  // Vimeo detection
  if (urlLower.includes('vimeo.com/')) {
    return 'vimeo';
  }
  
  // SoundCloud detection
  if (urlLower.includes('soundcloud.com/')) {
    return 'soundcloud';
  }
  
  // Default to link preview
  return 'link';
}

// Simple function to extract domain from URL
function getDomain(url: string): string {
  try {
    return new URL(url).hostname.replace('www.', '').toUpperCase();
  } catch {
    return 'LINK';
  }
}

// Function to convert URLs to embeddable formats
function getEmbedUrl(url: string, type: string): string {
  switch (type) {
    case 'youtube':
      // Convert various YouTube URL formats to embed URL
      if (url.includes('youtu.be/')) {
        const videoId = url.split('youtu.be/')[1].split('?')[0];
        return `https://www.youtube.com/embed/${videoId}`;
      } else if (url.includes('youtube.com/watch')) {
        const videoId = url.split('v=')[1]?.split('&')[0];
        return `https://www.youtube.com/embed/${videoId}`;
      }
      return url;
      
    case 'spotify':
      // Convert Spotify URLs to embed format
      if (url.includes('spotify.com/')) {
        return url.replace('spotify.com/', 'spotify.com/embed/');
      }
      return url;
      
    case 'vimeo':
      // Convert Vimeo URLs to embed format
      const vimeoId = url.split('vimeo.com/')[1]?.split('?')[0];
      return `https://player.vimeo.com/video/${vimeoId}`;
      
    default:
      return url;
  }
}
---

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Discovery - Markets Feeds</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', system-ui, sans-serif;
            line-height: 1.6;
            color: #0f172a;
            background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);
            font-feature-settings: "kern" 1, "liga" 1;
            text-rendering: optimizeLegibility;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
            min-height: 100vh;
        }

        .container {
            max-width: 720px;
            margin: 0 auto;
            padding: 0 28px;
        }

        /* Header */
        .header {
            border-bottom: 1px solid #e8e8ea;
            padding: 28px 0;
            position: sticky;
            top: 0;
            background: rgba(253, 253, 253, 0.92);
            backdrop-filter: blur(24px);
            -webkit-backdrop-filter: blur(24px);
            z-index: 100;
            margin-bottom: 48px;
        }

        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .header-left {
            display: flex;
            align-items: center;
            gap: 20px;
        }

        .logo {
            font-size: 18px;
            font-weight: 650;
            background: linear-gradient(135deg, #1a1a1a 0%, #374151 100%);
            background-clip: text;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            letter-spacing: -0.015em;
            font-feature-settings: "ss01" 1;
        }

        .discovery-badge {
            padding: 4px 12px;
            background: linear-gradient(135deg, #f8f9fa 0%, #f1f3f4 100%);
            color: #5f6368;
            font-size: 11px;
            font-weight: 550;
            border-radius: 16px;
            letter-spacing: 0.025em;
            border: 1px solid rgba(95, 99, 104, 0.08);
        }

        .nav-links {
            display: flex;
            gap: 24px;
            align-items: center;
        }

        .nav-link {
            color: #6b7280;
            text-decoration: none;
            font-size: 14px;
            font-weight: 450;
            transition: color 0.2s ease;
            letter-spacing: -0.003em;
        }

        .nav-link:hover {
            color: #1a1a1a;
        }

        .nav-link.active {
            color: #1a1a1a;
            font-weight: 550;
        }

        /* Filters */
        .filters {
            padding: 20px 0;
            border-bottom: 1px solid #e8e8ea;
            background: linear-gradient(180deg, #fdfdfd 0%, #fafafa 100%);
            margin-bottom: 40px;
            position: sticky;
            top: 87px;
            z-index: 50;
            backdrop-filter: blur(12px);
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.04);
        }

        .filter-container {
            max-width: 680px;
            margin: 0 auto;
            display: flex;
            gap: 12px;
            align-items: center;
        }

        .search-box {
            flex: 1;
            padding: 10px 14px;
            border: 1px solid #e2e8f0;
            border-radius: 8px;
            font-size: 14px;
            background: rgba(255, 255, 255, 0.9);
            font-family: inherit;
            box-shadow: 0 1px 2px rgba(0, 0, 0, 0.04);
            backdrop-filter: blur(8px);
        }

        .search-box:focus {
            outline: none;
            border-color: #3b82f6;
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
            background: rgba(255, 255, 255, 0.95);
        }

        .filter-select {
            padding: 10px 14px;
            border: 1px solid #e2e8f0;
            border-radius: 8px;
            font-size: 14px;
            background: rgba(255, 255, 255, 0.9);
            font-family: inherit;
            min-width: 120px;
            box-shadow: 0 1px 2px rgba(0, 0, 0, 0.04);
            backdrop-filter: blur(8px);
        }

        .filter-select:focus {
            outline: none;
            border-color: #3b82f6;
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
            background: rgba(255, 255, 255, 0.95);
        }

        /* Feed */
        .feed {
            display: flex;
            flex-direction: column;
            gap: 24px;
        }

        /* Post Cards */
        .post {
            background: rgba(255, 255, 255, 0.8);
            margin-bottom: 40px;
            border-radius: 12px;
            padding: 32px;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            border: 1px solid rgba(226, 232, 240, 0.8);
            backdrop-filter: blur(10px);
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.04);
        }

        .post:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.08);
            border-color: rgba(148, 163, 184, 0.4);
        }

        .post:last-child {
            margin-bottom: 40px;
        }

        .post-header {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-bottom: 20px;
        }

        .avatar {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            background: linear-gradient(135deg, #3b82f6 0%, #1e40af 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 600;
            font-size: 12px;
            color: #ffffff;
            box-shadow: 0 2px 8px rgba(59, 130, 246, 0.25);
        }

        .post-author {
            font-size: 14px;
            font-weight: 550;
            color: #4b5563;
            letter-spacing: -0.003em;
        }

        .post-time {
            font-size: 13px;
            color: #9ca3af;
            font-weight: 400;
            margin-left: auto;
            font-variant-numeric: tabular-nums;
        }

        .post-content {
            margin-bottom: 20px;
        }

        .post-text {
            font-size: 16px;
            line-height: 1.75;
            color: #2d3748;
            margin-bottom: 24px;
            font-weight: 400;
            letter-spacing: -0.003em;
        }

        /* Better markdown formatting */
        .post-text :global(p) {
            margin-bottom: 20px;
            line-height: 1.8;
        }

        .post-text :global(p:last-child) {
            margin-bottom: 0;
        }

        .post-text :global(strong) {
            font-weight: 650;
            color: #1a202c;
        }

        .post-text :global(ul), .post-text :global(ol) {
            margin: 16px 0;
            padding-left: 20px;
        }

        .post-text :global(li) {
            margin-bottom: 8px;
            line-height: 1.6;
        }

        .post-text :global(h1), .post-text :global(h2), .post-text :global(h3) {
            margin: 28px 0 18px 0;
            font-weight: 650;
            color: #1a202c;
            letter-spacing: -0.01em;
            line-height: 1.3;
        }

        .post-text :global(h1) { font-size: 26px; }
        .post-text :global(h2) { font-size: 22px; }
        .post-text :global(h3) { font-size: 19px; }

        .post-text :global(blockquote) {
            margin: 24px 0;
            padding: 20px 24px;
            background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
            border-left: 3px solid #3b82f6;
            border-radius: 0 8px 8px 0;
            font-style: italic;
            color: #475569;
            font-weight: 450;
            line-height: 1.7;
        }

        .post-text :global(code) {
            background: linear-gradient(135deg, #f5f5f7 0%, #f0f0f2 100%);
            padding: 3px 8px;
            border-radius: 5px;
            font-family: 'SF Mono', Monaco, 'Cascadia Code', 'JetBrains Mono', monospace;
            font-size: 14px;
            color: #c53030;
            font-weight: 500;
            border: 1px solid #e2e8f0;
        }

        .post-text :global(a) {
            color: #2563eb;
            text-decoration: none;
            font-weight: 550;
            border-bottom: 1px solid transparent;
            transition: all 0.2s ease;
            position: relative;
        }

        .post-text :global(a:hover) {
            color: #1d4ed8;
            border-bottom-color: #2563eb;
        }

        /* Link Preview */
        .link-preview {
            border: 1px solid #e8ebed;
            border-radius: 4px;
            overflow: hidden;
            margin-top: 16px;
            transition: border-color 0.15s ease;
            cursor: pointer;
            background: #ffffff;
        }

        .link-preview:hover {
            border-color: #d1d5db;
        }

        /* Auto-detected link previews */
        .auto-preview {
            border-left: 3px solid #3b82f6;
            background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
        }

        .auto-preview:hover {
            border-color: #2563eb;
            border-left-color: #1d4ed8;
        }

        /* Auto-detected embeds */
        .auto-embed {
            margin-top: 20px;
            border-radius: 8px;
            overflow: hidden;
            border: 2px solid #e2e8f0;
            background: #ffffff;
        }

        /* Spotify embeds */
        .spotify-embed {
            border-left: 4px solid #1db954;
        }

        .spotify-iframe {
            width: 100%;
            height: 152px;
            border: none;
            display: block;
        }

        /* Twitter preview styling */
        .twitter-preview {
            border-left-color: #1da1f2;
        }

        /* SoundCloud preview styling */
        .soundcloud-preview {
            border-left-color: #ff5500;
        }

        .preview-image {
            width: 100%;
            height: 200px;
            object-fit: cover;
            background: #fafafa;
        }

        .preview-content {
            padding: 20px;
        }

        .preview-title {
            font-size: 16px;
            font-weight: 500;
            color: #1a1a1a;
            margin-bottom: 8px;
            line-height: 1.4;
        }

        .preview-description {
            font-size: 14px;
            color: #666;
            line-height: 1.5;
            margin-bottom: 12px;
        }

        .preview-domain {
            font-size: 11px;
            color: #999;
            text-transform: uppercase;
            font-weight: 500;
            letter-spacing: 0.5px;
        }

        /* Video Embeds */
        .video-embed {
            margin-top: 16px;
            border-radius: 4px;
            overflow: hidden;
            background: #fafbfc;
            border: 1px solid #e8ebed;
        }

        .video-iframe {
            width: 100%;
            height: 315px;
            border: none;
            display: block;
        }

        .video-preview {
            position: relative;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .video-preview:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

        .video-thumbnail {
            width: 100%;
            height: 200px;
            object-fit: cover;
        }

        .play-button {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 60px;
            height: 60px;
            background: rgba(0, 0, 0, 0.8);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 20px;
            transition: all 0.2s ease;
        }

        .video-preview:hover .play-button {
            background: rgba(0, 0, 0, 0.9);
            transform: translate(-50%, -50%) scale(1.1);
        }

        .video-info {
            padding: 16px;
            background: white;
        }

        .video-title {
            font-size: 15px;
            font-weight: 500;
            color: #1a1a1a;
            margin-bottom: 6px;
            line-height: 1.4;
        }

        .video-description {
            font-size: 14px;
            color: #666;
            line-height: 1.4;
        }

        /* Image Embeds */
        .image-embed {
            margin-top: 16px;
            border-radius: 4px;
            overflow: hidden;
            border: 1px solid #e8ebed;
        }

        .embedded-image {
            width: 100%;
            height: auto;
            display: block;
            max-height: 600px;
            object-fit: cover;
        }

        .image-caption {
            padding: 12px 16px;
            background: #f9f9f9;
            font-size: 13px;
            color: #666;
            font-style: italic;
            text-align: center;
        }

        /* Tags */
        .post-tags {
            display: flex;
            gap: 8px;
            flex-wrap: wrap;
            margin-top: 20px;
        }

        .tag {
            padding: 4px 10px;
            background: linear-gradient(135deg, #f7fafc 0%, #edf2f7 100%);
            color: #4a5568;
            font-size: 11px;
            border-radius: 12px;
            font-weight: 500;
            border: 1px solid rgba(160, 174, 192, 0.2);
            letter-spacing: 0.01em;
        }

        /* Responsive */
        @media (max-width: 768px) {
            .container {
                padding: 0 16px;
            }

            .header {
                padding: 20px 0;
                margin-bottom: 32px;
            }

            .header-content {
                flex-direction: column;
                gap: 12px;
                align-items: flex-start;
            }
            
            .logo {
                font-size: 16px;
            }
            
            .discovery-badge {
                font-size: 10px;
                padding: 3px 10px;
            }
            
            .nav-links {
                gap: 16px;
                width: 100%;
                justify-content: space-between;
            }
            
            .nav-link {
                font-size: 13px;
                padding: 6px 0;
            }
            
            .filters {
                padding: 16px 0;
                margin-bottom: 24px;
            }
            
            .filter-container {
                flex-direction: column;
                gap: 12px;
                align-items: stretch;
            }
            
            .search-box {
                width: 100%;
                padding: 10px 12px;
            }
            
            .filter-select {
                width: 100%;
                padding: 10px 12px;
            }
            
            .post {
                padding: 24px;
                margin-bottom: 24px;
                border-radius: 8px;
            }
            
            .post-text {
                font-size: 15px;
                line-height: 1.65;
            }
            
            .post-text :global(h1) { font-size: 22px; }
            .post-text :global(h2) { font-size: 19px; }
            .post-text :global(h3) { font-size: 17px; }
            
            .post-text :global(blockquote) {
                margin: 20px 0;
                padding: 16px 20px;
            }
            
            .preview-content {
                padding: 16px;
            }
            
            .video-iframe {
                height: 200px;
            }
            
            .avatar {
                width: 28px;
                height: 28px;
                font-size: 11px;
            }
            
            .post-author {
                font-size: 13px;
            }
            
            .post-time {
                font-size: 12px;
            }
        }

        @media (max-width: 480px) {
            .container {
                padding: 0 12px;
            }
            
            .post {
                padding: 20px;
                margin-bottom: 20px;
            }
            
            .post-text {
                font-size: 14px;
            }
            
            .video-iframe {
                height: 180px;
            }
        }

        /* Animations */
        .post {
            animation: fadeIn 0.4s ease-out;
        }
        
        .post-text :global(a) {
            position: relative;
            overflow: hidden;
        }
        
        .post-text :global(a::before) {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 0;
            height: 1px;
            background: linear-gradient(90deg, #2563eb, #3b82f6);
            transition: width 0.3s ease;
        }
        
        .post-text :global(a:hover::before) {
            width: 100%;
        }
        
        .link-preview, .auto-preview {
            position: relative;
            overflow: hidden;
        }
        
        .link-preview::before, .auto-preview::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
            transition: left 0.6s ease;
        }
        
        .link-preview:hover::before, .auto-preview:hover::before {
            left: 100%;
        }
        
        .tag {
            transition: all 0.2s ease;
            cursor: pointer;
        }
        
        .tag:hover {
            background: linear-gradient(135deg, #e0f2fe 0%, #bae6fd 100%);
            color: #0369a1;
            border-color: rgba(3, 105, 161, 0.3);
            transform: translateY(-1px);
        }
        
        .search-box {
            transition: all 0.2s ease;
        }
        
        .search-box:hover {
            border-color: #cbd5e1;
        }
        
        .filter-select {
            transition: all 0.2s ease;
        }
        
        .filter-select:hover {
            border-color: #cbd5e1;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(12px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        /* Stagger animation for posts */
        .post:nth-child(1) { animation-delay: 0.1s; }
        .post:nth-child(2) { animation-delay: 0.15s; }
        .post:nth-child(3) { animation-delay: 0.2s; }
        .post:nth-child(4) { animation-delay: 0.25s; }
        .post:nth-child(5) { animation-delay: 0.3s; }
    </style>
</head>
<body>
    <div class="container">
        <!-- Header -->
        <header class="header">
            <div class="header-content">
                <div class="header-left">
                    <div class="logo">Markets Feeds</div>
                    <span class="discovery-badge">Discovery</span>
                </div>
                <nav class="nav-links">
                    <a href="/" class="nav-link">Feed</a>
                    <a href="/discover" class="nav-link active">Discover</a>
                </nav>
            </div>
        </header>

        <!-- Filters -->
        <div class="filters">
            <div class="filter-container">
                <input type="search" class="search-box" placeholder="Search discoveries..." id="searchInput" />
                <select class="filter-select" id="tagFilter">
                    <option value="">All Tags</option>
                </select>
            </div>
        </div>

        <!-- Feed -->
        <div class="feed">
            {discoveries.map(async (post) => {
                const { data } = post;
                const { Content } = await post.render();
                
                // Extract standalone URLs from the raw markdown content
                const standaloneUrls = extractStandaloneUrls(post.body);
                
                return (
                    <article class="post">
                        <div class="post-header">
                            <div class="avatar">MF</div>
                            <span class="post-author">{data.author}</span>
                            <span class="post-time">{formatRelativeTime(data.date)}</span>
                        </div>
                        
                        <div class="post-content">
                            <div class="post-text">
                                <Content />
                            </div>
                            
                            {data.media && data.media.type === 'link' && (
                                <div class="link-preview" onclick={`openLink('${data.media.url}')`}>
                                    {data.media.image && (
                                        <img src={data.media.image} alt={data.media.title} class="preview-image" />
                                    )}
                                    <div class="preview-content">
                                        <div class="preview-title">{data.media.title}</div>
                                        <div class="preview-description">{data.media.description}</div>
                                        <div class="preview-domain">{data.media.url ? new URL(data.media.url).hostname.toUpperCase() : ''}</div>
                                    </div>
                                </div>
                            )}
                            
                            {/* Auto-detected standalone URL previews */}
                            {standaloneUrls.length > 0 && standaloneUrls.map(urlObj => {
                                const { url, type } = urlObj;
                                
                                if (type === 'youtube') {
                                    return (
                                        <div class="video-embed auto-embed">
                                            <iframe 
                                                src={getEmbedUrl(url, type)}
                                                class="video-iframe"
                                                allowfullscreen
                                                title="YouTube video"
                                            ></iframe>
                                        </div>
                                    );
                                }
                                
                                if (type === 'spotify') {
                                    return (
                                        <div class="spotify-embed auto-embed">
                                            <iframe 
                                                src={getEmbedUrl(url, type)}
                                                class="spotify-iframe"
                                                allowtransparency="true"
                                                allow="encrypted-media"
                                                title="Spotify embed"
                                            ></iframe>
                                        </div>
                                    );
                                }
                                
                                if (type === 'vimeo') {
                                    return (
                                        <div class="video-embed auto-embed">
                                            <iframe 
                                                src={getEmbedUrl(url, type)}
                                                class="video-iframe"
                                                allowfullscreen
                                                title="Vimeo video"
                                            ></iframe>
                                        </div>
                                    );
                                }
                                
                                if (type === 'twitter') {
                                    return (
                                        <div class="link-preview auto-preview twitter-preview" onclick={`openLink('${url}')`}>
                                            <div class="preview-content">
                                                <div class="preview-title">📱 Twitter/X Post</div>
                                                <div class="preview-description">Click to view on Twitter/X</div>
                                                <div class="preview-domain">{getDomain(url)}</div>
                                            </div>
                                        </div>
                                    );
                                }
                                
                                if (type === 'soundcloud') {
                                    return (
                                        <div class="link-preview auto-preview soundcloud-preview" onclick={`openLink('${url}')`}>
                                            <div class="preview-content">
                                                <div class="preview-title">🎵 SoundCloud Track</div>
                                                <div class="preview-description">Click to listen on SoundCloud</div>
                                                <div class="preview-domain">{getDomain(url)}</div>
                                            </div>
                                        </div>
                                    );
                                }
                                
                                // Default link preview
                                return (
                                    <div class="link-preview auto-preview" onclick={`openLink('${url}')`}>
                                        <div class="preview-content">
                                            <div class="preview-title">{url}</div>
                                            <div class="preview-description">Click to open link</div>
                                            <div class="preview-domain">{getDomain(url)}</div>
                                        </div>
                                    </div>
                                );
                            })}
                            
                            {data.media && data.media.type === 'video' && data.media.url && (
                                <div class="video-embed">
                                    {data.media.url.includes('youtube.com') || data.media.url.includes('youtu.be') ? (
                                        <iframe 
                                            src={data.media.url.replace('watch?v=', 'embed/').replace('youtu.be/', 'youtube.com/embed/')} 
                                            style="border: none;" 
                                            allowfullscreen
                                            class="video-iframe"
                                        ></iframe>
                                    ) : (
                                        <div class="video-preview" onclick={`openLink('${data.media.url}')`}>
                                            {data.media.image && (
                                                <img src={data.media.image} alt={data.media.title} class="video-thumbnail" />
                                            )}
                                            <div class="play-button">▶</div>
                                            <div class="video-info">
                                                <div class="video-title">{data.media.title}</div>
                                                <div class="video-description">{data.media.description}</div>
                                            </div>
                                        </div>
                                    )}
                                </div>
                            )}
                            
                            {data.media && data.media.type === 'image' && (
                                <div class="image-embed">
                                    <img src={data.media.url} alt={data.media.title || 'Embedded image'} class="embedded-image" />
                                    {data.media.title && (
                                        <div class="image-caption">{data.media.title}</div>
                                    )}
                                </div>
                            )}
                        </div>

                        {data.tags && data.tags.length > 0 && (
                            <div class="post-tags">
                                {data.tags.map(tag => (
                                    <span class="tag">{tag}</span>
                                ))}
                            </div>
                        )}
                    </article>
                );
            })}
            
            {discoveries.length === 0 && (
                <div style="text-align: center; padding: 60px 20px; color: #666;">
                    <h3>No discovery posts yet</h3>
                    <p style="margin-top: 8px; font-size: 14px;">Visit <a href="/admin" style="color: #1a1a1a;">the admin panel</a> to create your first post.</p>
                </div>
            )}
        </div>
    </div>

    <script>
        // Link preview clicks
        function openLink(url: string) {
            window.open(url, '_blank');
        }

        // Local search and filtering
        document.addEventListener('DOMContentLoaded', () => {
            const searchInput = document.getElementById('searchInput') as HTMLInputElement;
            const tagFilter = document.getElementById('tagFilter') as HTMLSelectElement;
            const posts = document.querySelectorAll('.post');
            
            if (!searchInput || !tagFilter) return;
            
            // Collect all unique tags
            const allTags = new Set<string>();
            posts.forEach(post => {
                const tags = post.querySelectorAll('.tag');
                tags.forEach(tag => {
                    if (tag.textContent) allTags.add(tag.textContent.trim());
                });
            });
            
            // Populate tag filter
            Array.from(allTags).sort().forEach(tag => {
                const option = document.createElement('option');
                option.value = tag;
                option.textContent = tag;
                tagFilter.appendChild(option);
            });

            // Search functionality
            function filterPosts() {
                const searchTerm = searchInput.value.toLowerCase();
                const selectedTag = tagFilter.value;

                posts.forEach(post => {
                    const postElement = post as HTMLElement;
                    const postTextEl = post.querySelector('.post-text');
                    const postAuthorEl = post.querySelector('.post-author');
                    
                    const postText = postTextEl?.textContent?.toLowerCase() || '';
                    const postTitle = postAuthorEl?.textContent?.toLowerCase() || '';
                    const postTags = Array.from(post.querySelectorAll('.tag')).map(tag => tag.textContent?.trim() || '');
                    
                    const matchesSearch = !searchTerm || 
                        postText.includes(searchTerm) || 
                        postTitle.includes(searchTerm);
                    
                    const matchesTag = !selectedTag || postTags.includes(selectedTag);
                    
                    if (matchesSearch && matchesTag) {
                        postElement.style.display = 'block';
                    } else {
                        postElement.style.display = 'none';
                    }
                });
            }

            searchInput.addEventListener('input', filterPosts);
            tagFilter.addEventListener('change', filterPosts);
        });

        // Infinite scroll (placeholder)
        let loading = false;
        window.addEventListener('scroll', () => {
            if (loading) return;
            
            const { scrollTop, scrollHeight, clientHeight } = document.documentElement;
            
            if (scrollTop + clientHeight >= scrollHeight - 1000) {
                loading = true;
                console.log('Loading more posts...');
                
                // Simulate loading
                setTimeout(() => {
                    loading = false;
                }, 1000);
            }
        });
    </script>
</body>
</html>