---
import Layout from '../layouts/Layout.astro';
import Navigation from '../components/Navigation.astro';
import LinkCard from '../components/LinkCard.astro';
import type { FeedItem } from '../types';
import '../styles/global.css';

// Load all link data and filter for non-money content
const linkFiles = await Astro.glob('../content/links/*.json');
const allLinks: FeedItem[] = [];

// Non-money sources - matching the script configuration
const nonMoneySources = [
  'gaby-delvalle', 'way-of-work', 'benthams', 'leading-edge', 'astral-codex-ten',
  'freddie-deboer', 'res-obscura', 'nicholas-decker', 'max-read', 'henrik-karlsson',
  'visakan-veerasamy', 'simon-sarris', 'ai-log-blog', 'unhappy-man', 'experimental-history',
  'age-of-invention', 'not-boring', 'roots-of-progress', 'nate-silver', 'public-policy-ss',
  'branko-milanovic', 'aeon-magazine', 'psyche-magazine', 'common-reader', 'summer-of-protocols',
  'nautilus-magazine', 'noema-magazine', 'n-plus-one', 'quanta-magazine', 'programmable-mutter',
  'back-of-mind', 'marginal-revolution', 'dave-karpf', 'woman-of-letters', 'school-unconformed',
  'honest-broker', 'works-in-progress', 'construction-physics', 'rotten-and-good', 'over-the-field',
  'nils-gilman', 'pens-and-poison', 'philosophy-garden', 'noah-smith', 'jacobin',
  'new-left-review', 'small-potatoes', 'shruti-rajagopalan', 'rohan-venkat', 'africanist-perspective',
  'sustainability-by-numbers'
];

for (const file of linkFiles) {
  if (Array.isArray(file.default)) {
    allLinks.push(...file.default.filter((item: FeedItem) => 
      nonMoneySources.includes(item.sourceId)
    ));
  }
}

// Sort by published date
allLinks.sort((a, b) => new Date(b.publishedAt).getTime() - new Date(a.publishedAt).getTime());
---

<Layout title="Non-Money Feeds - Markets Feeds" description="General interest content, culture, politics, science, and ideas">
  
  <div class="container max-w-content mx-auto px-8 py-20 lg:py-32">
    <header class="text-center mb-20">
      <h1 class="text-3xl font-light text-text tracking-tight mb-12">
        Non-Money Feeds
      </h1>
      
      <div class="mb-6">
        <input
          type="text"
          id="searchInput"
          placeholder="Search general interest content..."
          class="w-full max-w-md px-0 py-4 text-base text-text bg-transparent border-0 border-b border-border outline-none text-center placeholder:text-text-subtle placeholder:font-light focus:border-text-light transition-colors duration-200"
        />
      </div>
      
      <Navigation currentPage="non-money" />
      
      <div class="text-center">
        <a 
          href="/sources" 
          class="inline-flex items-center text-text-subtle hover:text-text transition-colors text-sm font-light"
        >
          <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd" />
          </svg>
          View All Sources
        </a>
      </div>
    </header>
    
    <main id="linkStream" class="mt-20">
      {allLinks.length > 0 ? (
        allLinks.map((link) => (
          <LinkCard link={link} />
        ))
      ) : (
        <p class="text-center text-text-subtle text-sm font-light py-20">
          No general interest content available yet. Check back soon!
        </p>
      )}
    </main>
    
    <div id="emptyState" class="hidden text-center text-text-subtle text-sm font-light py-20">
      No matching content found.
    </div>
  </div>
  
  <script>
    // Search functionality
    const searchInput = document.getElementById('searchInput') as HTMLInputElement;
    const linkItems = document.querySelectorAll('.link-item');
    const emptyState = document.getElementById('emptyState');
    const linkStream = document.getElementById('linkStream');
    
    let searchTerm = '';
    
    searchInput.addEventListener('input', () => {
      searchTerm = searchInput.value.toLowerCase();
      applyFilters();
    });
    
    function applyFilters() {
      let visibleCount = 0;
      
      linkItems.forEach(item => {
        const title = item.querySelector('h2')?.textContent?.toLowerCase() || '';
        const summary = item.querySelector('p')?.textContent?.toLowerCase() || '';
        const tags = item.getAttribute('data-tags')?.toLowerCase() || '';
        
        const matchesSearch = searchTerm === '' || 
          title.includes(searchTerm) || 
          summary.includes(searchTerm) ||
          tags.includes(searchTerm);
        
        if (matchesSearch) {
          (item as HTMLElement).style.display = 'block';
          visibleCount++;
        } else {
          (item as HTMLElement).style.display = 'none';
        }
      });
      
      // Show/hide empty state
      if (visibleCount === 0) {
        linkStream?.classList.add('hidden');
        emptyState?.classList.remove('hidden');
      } else {
        linkStream?.classList.remove('hidden');
        emptyState?.classList.add('hidden');
      }
    }
    
    // Global function for tag clicking
    (window as any).filterByTag = function(tag: string) {
      searchInput.value = tag.toLowerCase();
      searchTerm = tag.toLowerCase();
      applyFilters();
      searchInput.focus();
    };
  </script>
</Layout>