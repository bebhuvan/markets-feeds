---
export const prerender = false;

import Layout from '../layouts/Layout.astro';
import SimpleHeader from '../components/SimpleHeader.astro';
import EnhancedNavigation from '../components/EnhancedNavigation.astro';
import EnhancedArticle from '../components/EnhancedArticle.astro';
import Sidebar from '../components/Sidebar.astro';
import { dataLoader } from '../lib/data-loader';
import { CATEGORIES } from '../lib/categories';
import '../styles/global.css';

// Get category and page
const { category } = Astro.params;
const page = parseInt(Astro.url.searchParams.get('page') || '1');

// Validate category
if (!category || !CATEGORIES[category as keyof typeof CATEGORIES]) {
  return Astro.redirect('/');
}

// Load data
const categoryItems = await dataLoader.getByCategory(category);
const categoryCounts = await dataLoader.getCategoryCounts();
const { items, totalPages, totalItems, hasNext, hasPrev } = dataLoader.paginate(categoryItems, page);

const categoryLabel = CATEGORIES[category as keyof typeof CATEGORIES];

// Get source counts for sidebar
const sourceCounts = await dataLoader.getSourceCounts();

// Get last update time
const lastUpdate = categoryItems.length > 0 
  ? new Date(Math.max(...categoryItems.map(item => new Date(item.fetchedAt || item.publishedAt).getTime())))
  : new Date();
---

<Layout title={`${categoryLabel} - Markets Feeds`}>
  <SimpleHeader />
  <EnhancedNavigation currentCategory={category} categoryCounts={categoryCounts} />
  
  <div class="container">
    <div class="content-wrapper">
      <div class="content-grid">
      <!-- Main Feed -->
      <main class="feed">
        <div class="feed-header">
          <h1 class="feed-title">{categoryLabel}</h1>
          <span class="article-count">{totalItems} articles</span>
        </div>

        {totalItems === 0 ? (
          <div style="text-align: center; padding: 80px 20px; color: #6b7280;">
            <p>No articles found in {categoryLabel}</p>
          </div>
        ) : (
          <>
            <div class="articles">
              {items.map(article => (
                <EnhancedArticle article={article} />
              ))}
            </div>

            {totalPages > 1 && (
              <div class="pagination">
                {hasPrev ? (
                  <a href={`/${category}?page=${page - 1}`} class="pagination-btn">
                    ← Previous
                  </a>
                ) : (
                  <span class="pagination-btn disabled">← Previous</span>
                )}
                
                <span class="pagination-info">Page {page} of {totalPages}</span>
                
                {hasNext ? (
                  <a href={`/${category}?page=${page + 1}`} class="pagination-btn">
                    Next →
                  </a>
                ) : (
                  <span class="pagination-btn disabled">Next →</span>
                )}
              </div>
            )}
          </>
        )}
      </main>
      
      <!-- Sidebar -->
      <aside class="sidebar-wrapper">
        <Sidebar sourceCounts={sourceCounts} categoryCounts={categoryCounts} currentCategory={category} />
      </aside>
      </div>
    </div>
  </div>

  <!-- Mobile Sidebar Toggle -->
  <button class="mobile-sidebar-toggle" aria-label="Toggle sidebar">
    <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
    </svg>
  </button>

  <!-- Sidebar Overlay -->
  <div class="sidebar-overlay"></div>
</Layout>

<style>
  /* Content spacing */
  .content-wrapper {
    padding-top: 24px;
  }

  /* Simple Feed Header */
  .feed-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 24px;
    padding-bottom: 12px;
    border-bottom: 1px solid #f1f5f9;
  }

  .feed-title {
    font-size: 18px;
    font-weight: 600;
    color: #1f2937;
    margin: 0;
  }

  .article-count {
    color: #9ca3af;
    font-size: 13px;
  }

  @media (max-width: 768px) {
    .feed-header {
      flex-direction: column;
      align-items: flex-start;
      gap: 4px;
    }
  }
</style>

<script>
  // Mobile sidebar toggle
  const toggleBtn = document.querySelector('.mobile-sidebar-toggle');
  const sidebar = document.querySelector('.sidebar');
  const overlay = document.querySelector('.sidebar-overlay');

  if (toggleBtn && sidebar && overlay) {
    toggleBtn.addEventListener('click', () => {
      sidebar.classList.toggle('active');
      overlay.classList.toggle('active');
    });

    overlay.addEventListener('click', () => {
      sidebar.classList.remove('active');
      overlay.classList.remove('active');
    });
  }
</script>