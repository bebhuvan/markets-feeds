---
export const prerender = false;

import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Navigation from '../components/Navigation.astro';
import Sidebar from '../components/Sidebar.astro';
import { ideasLoader } from '../lib/ideas-loader';
import { dataLoader } from '../lib/data-loader';
import '../styles/global.css';

// Get page number for pagination
const page = parseInt(Astro.url.searchParams.get('page') || '1');

// Load ideas posts from PagesCMS content
const allPosts = await ideasLoader.loadPosts();
const { posts, totalPages, totalPosts, hasNext, hasPrev } = ideasLoader.paginate(allPosts, page, 10);

// Get popular tags for sidebar
const popularTags = await ideasLoader.getPopularTags(8);

// Get data for header and navigation
const allItems = await dataLoader.loadData();
const categoryCounts = await dataLoader.getCategoryCounts();
const sourceCounts = await dataLoader.getSourceCounts();
const lastUpdate = allItems.length > 0 
  ? new Date(Math.max(...allItems.map(item => new Date(item.fetchedAt || item.publishedAt).getTime())))
  : new Date();
---

<Layout title="Ideas - Markets Feeds">
  <Header lastUpdate={lastUpdate} totalArticles={allItems.length} />
  <Navigation categoryCounts={categoryCounts} currentCategory="ideas" />

  <div class="container">
    <div class="content-grid">
      <!-- Main Ideas Feed -->
      <main class="feed">
        <div class="feed-header">
          <h1 class="feed-title">Ideas & Insights</h1>
          <div class="feed-meta">{totalPosts} posts</div>
        </div>

        <!-- Compose Box -->
        <div class="compose-box" id="composeBox">
      <div class="compose-header">
        <div class="avatar">RF</div>
        <textarea 
          class="compose-input" 
          placeholder="Share an insight, link, or observation..."
          rows="3"
        ></textarea>
      </div>
      
      <div class="compose-actions">
        <div class="compose-tools">
          <button class="tool-btn" title="Add Link">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
              <path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z"/>
            </svg>
          </button>
          <button class="tool-btn" title="Add Tags">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
              <path d="M17.63 5.84C17.27 5.33 16.67 5 16 5L5 5.01C3.9 5.01 3 5.9 3 7v10c0 1.1.9 1.99 2 1.99L16 19c.67 0 1.27-.33 1.63-.84L22 12l-4.37-6.16z"/>
            </svg>
          </button>
        </div>
        <div class="compose-submit">
          <button class="share-btn" disabled>Share</button>
        </div>
      </div>
    </div>

    <!-- Feed -->
    {posts.length === 0 ? (
      <div class="no-posts">
        <h3>No ideas yet</h3>
        <p>Share your first insight using the compose button above.</p>
      </div>
    ) : (
      <div class="ideas-posts">
        {posts.map(post => (
        <article class="idea-post">
          <div class="post-header">
            <div class="post-avatar">
              {post.authorName ? post.authorName.split(' ').map(n => n[0]).join('') : 'T'}
            </div>
            <div class="post-meta">
              <div class="post-author">{post.authorName || post.author}</div>
              <div class="post-time">
                {new Date(post.createdAt).toLocaleDateString('en-US', { 
                  month: 'short', 
                  day: 'numeric',
                  hour: '2-digit',
                  minute: '2-digit'
                })}
              </div>
            </div>
          </div>
          
          <div class="post-content">
            <h3 class="post-title">{post.title || post.frontmatter?.title}</h3>
            <div class="post-text" set:html={post.content}></div>
            
            {post.type === 'link' && post.linkPreview && (
              <div class="link-preview" onclick={`openLink('${post.linkPreview.url}')`}>
                {post.linkPreview.image && (
                  <img src={post.linkPreview.image} alt={post.linkPreview.title} class="preview-image" />
                )}
                <div class="preview-content">
                  <div class="preview-title">{post.linkPreview.title}</div>
                  <div class="preview-description">{post.linkPreview.description}</div>
                  <div class="preview-domain">{post.linkPreview.domain}</div>
                </div>
              </div>
            )}
            
            {post.type === 'video' && post.videoEmbed && (
              <div class="video-embed">
                <div class="video-placeholder" style={`background-image: url(${post.videoEmbed.thumbnail})`}>
                  <div class="play-button">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
                      <path d="M8 5v14l11-7z"/>
                    </svg>
                  </div>
                  <div class="video-title">{post.videoEmbed.title}</div>
                </div>
              </div>
            )}
            
            {post.type === 'tweet' && post.tweetEmbed && (
              <div class="tweet-embed">
                <div class="tweet-header">
                  <div class="tweet-avatar"></div>
                  <div class="tweet-author-info">
                    <span class="tweet-author">{post.tweetEmbed.author}</span>
                    <span class="tweet-handle">{post.tweetEmbed.handle}</span>
                  </div>
                </div>
                <div class="tweet-content">{post.tweetEmbed.content}</div>
              </div>
            )}
          </div>

          {post.tags && post.tags.length > 0 && (
            <div class="post-tags">
              {post.tags.map(tag => (
                <span class="tag">{tag}</span>
              ))}
            </div>
          )}

          <div class="post-actions">
            <button class="action-btn" data-action="insight">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
                <path d="M9 21c0 .5.4 1 1 1h4c.6 0 1-.5 1-1v-1H9v1zm3-19C8.1 2 5 5.1 5 9c0 2.4 1.2 4.5 3 5.7V17c0 .5.4 1 1 1h6c.6 0 1-.5 1-1v-2.3c1.8-1.3 3-3.4 3-5.7 0-3.9-3.1-7-7-7z"/>
              </svg>
              <span>{post.reactions.insights}</span>
            </button>
            <button class="action-btn" data-action="comment">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
                <path d="M20 2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h4l4 4 4-4h4c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2z"/>
              </svg>
              <span>{post.reactions.comments}</span>
            </button>
            <button class="action-btn" data-action="share">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
                <path d="M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92s2.92-1.31 2.92-2.92S19.61 16.08 18 16.08z"/>
              </svg>
              <span>Share</span>
            </button>
          </div>
        </article>
      ))}
      
      {/* Pagination */}
      {totalPages > 1 && (
        <div class="pagination">
          {hasPrev ? (
            <a href={`/ideas?page=${page - 1}`} class="pagination-btn">
              ← Previous
            </a>
          ) : (
            <span class="pagination-btn disabled">← Previous</span>
          )}
          
          <span class="pagination-info">Page {page} of {totalPages}</span>
          
          {hasNext ? (
            <a href={`/ideas?page=${page + 1}`} class="pagination-btn">
              Next →
            </a>
          ) : (
            <span class="pagination-btn disabled">Next →</span>
          )}
        </div>
      )}
      </div>
    )}
    </main>

      <!-- Sidebar -->
      <Sidebar sourceCounts={sourceCounts} categoryCounts={categoryCounts} currentCategory="ideas" />
    </div>
  </div>
</Layout>

<style>
  /* Use existing global styles and override as needed */
  
  /* Feed specific overrides for Ideas */
  .feed-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 24px;
    padding-bottom: 16px;
    border-bottom: 1px solid #e8ebed;
  }

  .feed-title {
    font-size: 24px;
    font-weight: 600;
    color: #2a2a2a;
    margin: 0;
  }

  .feed-meta {
    font-size: 14px;
    color: #6b7280;
    display: flex;
    align-items: center;
    gap: 8px;
  }

  /* Compose Box */
  .compose-box {
    background: #ffffff;
    border: 1px solid #e8ebed;
    border-radius: 12px;
    padding: 20px;
    margin-bottom: 24px;
    display: none;
  }

  .compose-box.active {
    display: block;
  }

  .compose-header {
    display: flex;
    gap: 12px;
    align-items: flex-start;
    margin-bottom: 16px;
  }

  .avatar {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background: linear-gradient(135deg, #3b82f6, #1e40af);
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-weight: 600;
    font-size: 14px;
    flex-shrink: 0;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .compose-input {
    flex: 1;
    border: none;
    outline: none;
    font-size: 14px;
    line-height: 1.5;
    resize: none;
    min-height: 60px;
    font-family: inherit;
    color: #2a2a2a;
  }

  .compose-input::placeholder {
    color: #9ca3af;
  }

  .compose-actions {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 16px;
    padding-top: 16px;
    border-top: 1px solid #e8ebed;
  }

  .compose-options {
    display: flex;
    gap: 8px;
  }

  .compose-btn {
    display: flex;
    align-items: center;
    gap: 6px;
    padding: 6px 12px;
    border: 1px solid #e8ebed;
    border-radius: 6px;
    background: #f8fafc;
    color: #6b7280;
    font-size: 13px;
    cursor: pointer;
    transition: all 0.15s ease;
  }

  .compose-btn:hover {
    background: #e8ebed;
    color: #2a2a2a;
  }

  .compose-submit {
    padding: 8px 16px;
    background: #1e40af;
    color: white;
    border: none;
    border-radius: 6px;
    font-size: 14px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.15s ease;
  }

  .compose-submit:hover {
    background: #1d4ed8;
  }

  .compose-submit:disabled {
    background: #9ca3af;
    cursor: not-allowed;
  }

  /* Ideas Posts */
  .ideas-posts {
    display: flex;
    flex-direction: column;
    gap: 20px;
  }

  .idea-post {
    background: #ffffff;
    border: 1px solid #e8ebed;
    border-radius: 12px;
    padding: 20px;
    transition: all 0.15s ease;
  }

  .idea-post:hover {
    border-color: #d1d5db;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04);
  }

  .post-header {
    display: flex;
    align-items: center;
    gap: 12px;
    margin-bottom: 16px;
  }

  .post-avatar {
    width: 36px;
    height: 36px;
    border-radius: 50%;
    background: linear-gradient(135deg, #10b981, #059669);
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-weight: 600;
    font-size: 13px;
    flex-shrink: 0;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  }

  .post-meta {
    flex: 1;
  }

  .post-author {
    font-weight: 600;
    color: #2a2a2a;
    font-size: 14px;
    margin-bottom: 2px;
  }

  .post-time {
    font-size: 13px;
    color: #6b7280;
  }

  .post-content {
    margin-bottom: 16px;
  }

  .post-title {
    font-size: 16px;
    font-weight: 600;
    color: #2a2a2a;
    margin: 0 0 8px 0;
    line-height: 1.4;
  }

  .post-text {
    font-size: 14px;
    line-height: 1.6;
    color: #374151;
    margin: 0;
  }

  .post-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 6px;
    margin-bottom: 16px;
  }

  .tag {
    font-size: 12px;
    color: #6b7280;
    background: #f3f4f6;
    padding: 4px 8px;
    border-radius: 12px;
    text-decoration: none;
    transition: all 0.15s ease;
  }

  .tag:hover {
    background: #e8ebed;
    color: #2a2a2a;
  }

  .post-actions {
    display: flex;
    align-items: center;
    gap: 16px;
  }

  .action-btn {
    display: flex;
    align-items: center;
    gap: 6px;
    padding: 6px 12px;
    background: #f8fafc;
    border: 1px solid #e8ebed;
    border-radius: 6px;
    color: #6b7280;
    font-size: 13px;
    cursor: pointer;
    transition: all 0.15s ease;
  }

  .action-btn:hover {
    background: #e8ebed;
    color: #2a2a2a;
  }

  .action-btn svg {
    width: 14px;
    height: 14px;
  }

  /* Media Embeds */
  .video-embed, .link-preview, .tweet-embed {
    margin: 16px 0;
    border: 1px solid #e8ebed;
    border-radius: 8px;
    overflow: hidden;
  }

  .video-embed {
    position: relative;
    background: #000;
    aspect-ratio: 16/9;
  }

  .video-placeholder {
    position: absolute;
    inset: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    color: white;
    background: linear-gradient(45deg, rgba(0,0,0,0.7), rgba(0,0,0,0.5));
  }

  .play-button {
    width: 60px;
    height: 60px;
    background: rgba(255,255,255,0.9);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 12px;
    cursor: pointer;
  }

  .play-button svg {
    width: 24px;
    height: 24px;
    color: #1e40af;
  }

  .video-title {
    font-size: 14px;
    font-weight: 500;
    text-align: center;
    max-width: 80%;
  }

  .link-preview {
    background: #f8fafc;
  }

  .preview-content {
    padding: 16px;
  }

  .preview-title {
    font-size: 14px;
    font-weight: 600;
    color: #2a2a2a;
    margin: 0 0 6px 0;
    line-height: 1.3;
  }

  .preview-description {
    font-size: 13px;
    color: #6b7280;
    line-height: 1.4;
    margin: 0 0 8px 0;
  }

  .preview-url {
    font-size: 12px;
    color: #9ca3af;
    text-decoration: none;
  }

  .preview-url:hover {
    color: #1e40af;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .compose-actions {
      flex-direction: column;
      gap: 12px;
      align-items: stretch;
    }
    
    .compose-options {
      justify-content: center;
    }
    
    .post-actions {
      flex-wrap: wrap;
      gap: 8px;
    }
    
    .action-btn {
      font-size: 12px;
      padding: 4px 8px;
    }
  }
    margin-bottom: 16px;
  }

  .avatar {
    width: 36px;
    height: 36px;
    border-radius: 50%;
    background: #f3f4f6;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: 600;
    font-size: 14px;
    color: #6b7280;
    flex-shrink: 0;
  }

  .compose-input {
    flex: 1;
    border: none;
    font-size: 16px;
    color: #2a2a2a;
    outline: none;
    resize: none;
    font-family: inherit;
    line-height: 1.5;
    background: transparent;
  }

  .compose-input::placeholder {
    color: #9ca3af;
  }

  .compose-actions {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-top: 12px;
    border-top: 1px solid #f1f3f4;
  }

  .compose-tools {
    display: flex;
    gap: 8px;
  }

  .tool-btn {
    padding: 8px;
    border: none;
    background: transparent;
    color: #6b7280;
    border-radius: 6px;
    cursor: pointer;
    transition: all 0.15s ease;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .tool-btn:hover {
    background: #f8fafc;
    color: #2a2a2a;
  }

  .share-btn {
    padding: 8px 16px;
    background: #1e40af;
    color: white;
    border: none;
    border-radius: 6px;
    font-size: 14px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.15s ease;
  }

  .share-btn:hover:not(:disabled) {
    background: #1d4ed8;
  }

  .share-btn:disabled {
    background: #d1d5db;
    cursor: not-allowed;
  }

  /* Ideas Feed */
  .ideas-feed {
    display: flex;
    flex-direction: column;
    gap: 24px;
    max-width: 680px;
  }

  /* Idea Post */
  .idea-post {
    background: #ffffff;
    border: 1px solid #e8ebed;
    border-radius: 12px;
    padding: 24px;
    transition: all 0.2s ease;
  }

  .idea-post:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.04);
    border-color: #d1d5db;
  }

  .post-header {
    display: flex;
    align-items: center;
    gap: 12px;
    margin-bottom: 16px;
  }

  .post-meta {
    display: flex;
    flex-direction: column;
    gap: 2px;
  }

  .post-author {
    font-size: 14px;
    font-weight: 500;
    color: #2a2a2a;
    line-height: 1.2;
  }

  .post-time {
    font-size: 12px;
    color: #9ca3af;
    line-height: 1.2;
  }

  .post-content {
    margin-bottom: 16px;
  }

  .post-text {
    font-size: 16px;
    line-height: 1.6;
    color: #2a2a2a;
    margin-bottom: 16px;
  }

  /* Link Preview */
  .link-preview {
    border: 1px solid #e8ebed;
    border-radius: 8px;
    overflow: hidden;
    cursor: pointer;
    transition: all 0.15s ease;
  }

  .link-preview:hover {
    border-color: #d1d5db;
    transform: translateY(-1px);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04);
  }

  .preview-image {
    width: 100%;
    height: 200px;
    object-fit: cover;
    background: #f8fafc;
  }

  .preview-content {
    padding: 16px;
  }

  .preview-title {
    font-size: 15px;
    font-weight: 500;
    color: #2a2a2a;
    margin-bottom: 6px;
    line-height: 1.4;
  }

  .preview-description {
    font-size: 13px;
    color: #6b7280;
    line-height: 1.5;
    margin-bottom: 8px;
  }

  .preview-domain {
    font-size: 11px;
    color: #9ca3af;
    text-transform: uppercase;
    font-weight: 500;
    letter-spacing: 0.5px;
  }

  /* Video Embed */
  .video-embed {
    border-radius: 8px;
    overflow: hidden;
    border: 1px solid #e8ebed;
    cursor: pointer;
  }

  .video-placeholder {
    width: 100%;
    height: 300px;
    background: #1a1a1a;
    background-size: cover;
    background-position: center;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
  }

  .play-button {
    width: 64px;
    height: 64px;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.9);
    display: flex;
    align-items: center;
    justify-content: center;
    color: #2a2a2a;
    transition: all 0.2s ease;
  }

  .play-button:hover {
    background: #ffffff;
    transform: scale(1.05);
  }

  .video-title {
    position: absolute;
    bottom: 16px;
    left: 16px;
    color: white;
    font-size: 14px;
    font-weight: 500;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
  }

  /* Tweet Embed */
  .tweet-embed {
    border: 1px solid #e8ebed;
    border-radius: 8px;
    padding: 16px;
    background: #ffffff;
  }

  .tweet-header {
    display: flex;
    align-items: center;
    gap: 8px;
    margin-bottom: 8px;
  }

  .tweet-avatar {
    width: 24px;
    height: 24px;
    border-radius: 50%;
    background: #1a1a1a;
  }

  .tweet-author-info {
    display: flex;
    gap: 8px;
    align-items: center;
  }

  .tweet-author {
    font-size: 14px;
    font-weight: 500;
    color: #2a2a2a;
  }

  .tweet-handle {
    font-size: 14px;
    color: #6b7280;
  }

  .tweet-content {
    font-size: 15px;
    line-height: 1.5;
    color: #2a2a2a;
  }

  /* Tags */
  .post-tags {
    display: flex;
    gap: 8px;
    flex-wrap: wrap;
    margin-bottom: 16px;
  }

  .tag {
    padding: 4px 10px;
    background: #f8fafc;
    color: #6b7280;
    font-size: 11px;
    border-radius: 12px;
    font-weight: 500;
    letter-spacing: 0.02em;
    border: 1px solid #e8ebed;
  }

  /* Post Actions */
  .post-actions {
    display: flex;
    gap: 20px;
    align-items: center;
    padding-top: 16px;
    border-top: 1px solid #f1f3f4;
  }

  .action-btn {
    display: flex;
    align-items: center;
    gap: 6px;
    padding: 8px 12px;
    background: transparent;
    border: 1px solid #e8ebed;
    color: #6b7280;
    font-size: 13px;
    font-weight: 500;
    border-radius: 6px;
    cursor: pointer;
    transition: all 0.15s ease;
  }

  .action-btn:hover {
    background: #f8fafc;
    color: #2a2a2a;
    border-color: #d1d5db;
  }

  .action-btn.active {
    background: #eff6ff;
    color: #1e40af;
    border-color: #dbeafe;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .header-content {
      flex-direction: column;
      gap: 16px;
      align-items: stretch;
    }

    .header-left {
      justify-content: center;
    }

    .compose-trigger {
      justify-content: center;
    }

    .compose-box {
      margin: 16px 0 24px 0;
      padding: 16px;
    }

    .compose-actions {
      flex-direction: column;
      gap: 12px;
      align-items: stretch;
    }

    .compose-tools {
      justify-content: center;
    }

    .idea-post {
      padding: 20px 16px;
    }

    .post-actions {
      justify-content: space-around;
      gap: 12px;
    }

    .action-btn {
      flex: 1;
      justify-content: center;
    }
  }

  /* Pagination */
  .pagination {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 16px;
    margin-top: 40px;
    padding-top: 40px;
    border-top: 1px solid #e8ebed;
  }

  .pagination-btn {
    padding: 8px 16px;
    border: 1px solid #e8ebed;
    background: #ffffff;
    color: #2a2a2a;
    font-size: 14px;
    border-radius: 6px;
    text-decoration: none;
    transition: all 0.15s ease;
  }

  .pagination-btn:hover:not(.disabled) {
    background: #f8fafc;
    border-color: #d1d5db;
  }

  .pagination-btn.disabled {
    opacity: 0.5;
    cursor: not-allowed;
    color: #9ca3af;
  }

  .pagination-info {
    font-size: 14px;
    color: #6b7280;
  }

  /* Tags Sidebar */
  .tags-sidebar {
    background: #ffffff;
    border: 1px solid #e8ebed;
    border-radius: 12px;
    padding: 20px;
    height: fit-content;
    position: sticky;
    top: 120px;
    max-width: 280px;
    margin-left: 40px;
  }

  .sidebar-title {
    font-size: 14px;
    font-weight: 600;
    color: #2a2a2a;
    margin-bottom: 16px;
  }

  .popular-tags {
    display: flex;
    flex-direction: column;
    gap: 8px;
  }

  .popular-tag {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 8px 12px;
    background: #f8fafc;
    border: 1px solid #e8ebed;
    border-radius: 8px;
    text-decoration: none;
    transition: all 0.15s ease;
  }

  .popular-tag:hover {
    background: #f3f4f6;
    border-color: #d1d5db;
  }

  .tag-name {
    font-size: 13px;
    font-weight: 500;
    color: #2a2a2a;
  }

  .tag-count {
    font-size: 11px;
    color: #6b7280;
    background: #ffffff;
    padding: 2px 6px;
    border-radius: 10px;
    min-width: 20px;
    text-align: center;
  }

  /* Animations */
  .idea-post {
    animation: fadeIn 0.3s ease-out;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>

<script>
  // Compose functionality
  const composeTrigger = document.querySelector('.compose-trigger');
  const composeBox = document.getElementById('composeBox');
  const composeInput = document.querySelector('.compose-input');
  const shareBtn = document.querySelector('.share-btn');

  composeTrigger?.addEventListener('click', () => {
    composeBox?.classList.toggle('active');
    if (composeBox?.classList.contains('active')) {
      composeInput?.focus();
    }
  });

  // Enable/disable share button based on input
  composeInput?.addEventListener('input', (e) => {
    const hasContent = (e.target as HTMLTextAreaElement).value.trim().length > 0;
    if (shareBtn) {
      shareBtn.disabled = !hasContent;
    }
  });

  // Post actions
  document.querySelectorAll('.action-btn').forEach(btn => {
    btn.addEventListener('click', (e) => {
      e.stopPropagation();
      
      const action = btn.getAttribute('data-action');
      
      if (action === 'insight') {
        btn.classList.toggle('active');
        
        // Update count
        const countSpan = btn.querySelector('span:last-child');
        if (countSpan) {
          let count = parseInt(countSpan.textContent || '0');
          countSpan.textContent = btn.classList.contains('active') ? 
            (count + 1).toString() : (count - 1).toString();
        }
      }
    });
  });

  // Link preview clicks
  function openLink(url: string) {
    window.open(url, '_blank');
  }

  // Make function global for onclick handlers
  (window as any).openLink = openLink;
</script>