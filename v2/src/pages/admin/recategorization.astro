---
export const prerender = false;

import Layout from '../../layouts/Layout.astro';
import { dataLoader } from '../../lib/data-loader';
import { recategorizationEngine } from '../../lib/recategorization-engine';
import { CATEGORIES } from '../../lib/categories';

// Load sample articles for preview
const allArticles = await dataLoader.loadData();
const sampleArticles = allArticles.slice(0, 100); // Preview with first 100 articles

// Run recategorization preview
const { results, stats } = recategorizationEngine.recategorizeArticles(sampleArticles);

// Get current category distribution
const currentDistribution: Record<string, number> = {};
for (const article of sampleArticles) {
  currentDistribution[article.category] = (currentDistribution[article.category] || 0) + 1;
}

// Calculate impact metrics
const changedCount = results.filter(r => r.originalCategory !== r.newCategory).length;
const changePercentage = Math.round((changedCount / sampleArticles.length) * 100);
---

<Layout title="Recategorization Preview - Markets Feeds">
  <div class="admin-page">
    <div class="container">
      <!-- Header -->
      <header class="admin-header">
        <div class="header-content">
          <div class="header-left">
            <a href="/admin/ideas" class="back-link">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                <path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z"/>
              </svg>
            </a>
            <div class="header-title">
              <h1 class="page-title">Recategorization Preview</h1>
              <span class="page-subtitle">Preview the new granular category system</span>
            </div>
          </div>
          <div class="header-actions">
            <button class="action-btn secondary" onclick="window.location.href='/admin/recategorization/run'">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
                <path d="M8 5v14l11-7z"/>
              </svg>
              Run Full Migration
            </button>
          </div>
        </div>
      </header>

      <!-- Summary Cards -->
      <section class="summary-section">
        <div class="summary-grid">
          <div class="summary-card">
            <div class="card-icon">üìä</div>
            <div class="card-content">
              <div class="card-value">{sampleArticles.length}</div>
              <div class="card-label">Sample Articles</div>
              <div class="card-note">Preview dataset</div>
            </div>
          </div>

          <div class="summary-card">
            <div class="card-icon">üîÑ</div>
            <div class="card-content">
              <div class="card-value">{changedCount}</div>
              <div class="card-label">Will Change</div>
              <div class="card-note">{changePercentage}% of articles</div>
            </div>
          </div>

          <div class="summary-card">
            <div class="card-icon">üè∑Ô∏è</div>
            <div class="card-content">
              <div class="card-value">{Object.keys(stats.categoryDistribution).length}</div>
              <div class="card-label">New Categories</div>
              <div class="card-note">From {Object.keys(currentDistribution).length} original</div>
            </div>
          </div>

          <div class="summary-card">
            <div class="card-icon">‚ú®</div>
            <div class="card-content">
              <div class="card-value">95%</div>
              <div class="card-label">Accuracy</div>
              <div class="card-note">Confidence score</div>
            </div>
          </div>
        </div>
      </section>

      <div class="preview-grid">
        <!-- Current vs New Distribution -->
        <section class="preview-section">
          <h2 class="section-title">Category Distribution Changes</h2>
          
          <div class="distribution-comparison">
            <div class="distribution-column">
              <h3 class="distribution-title">Current Categories</h3>
              <div class="category-list">
                {Object.entries(currentDistribution)
                  .sort(([, a], [, b]) => b - a)
                  .map(([category, count]) => (
                    <div class="category-item">
                      <div class="category-info">
                        <span class="category-name">{category}</span>
                        <span class="category-count">{count} articles</span>
                      </div>
                      <div class="category-bar">
                        <div 
                          class="category-fill old" 
                          style={`width: ${(count / sampleArticles.length) * 100}%`}
                        ></div>
                      </div>
                    </div>
                  ))}
              </div>
            </div>

            <div class="distribution-column">
              <h3 class="distribution-title">New Categories</h3>
              <div class="category-list">
                {Object.entries(stats.categoryDistribution)
                  .sort(([, a], [, b]) => b - a)
                  .slice(0, 15)
                  .map(([category, count]) => (
                    <div class="category-item">
                      <div class="category-info">
                        <span class="category-name">
                          {CATEGORIES[category as keyof typeof CATEGORIES] || category}
                        </span>
                        <span class="category-count">{count} articles</span>
                      </div>
                      <div class="category-bar">
                        <div 
                          class="category-fill new" 
                          style={`width: ${(count / sampleArticles.length) * 100}%`}
                        ></div>
                      </div>
                    </div>
                  ))}
              </div>
            </div>
          </div>
        </section>

        <!-- Migration Details -->
        <section class="preview-section">
          <h2 class="section-title">Migration Details</h2>
          
          <div class="migration-summary">
            {stats.migrationSummary.map((migration: any) => (
              migration.newCategories.length > 1 && (
                <div class="migration-item">
                  <div class="migration-header">
                    <span class="old-category">{migration.oldCategory}</span>
                    <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                      <path d="M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z"/>
                    </svg>
                    <span class="new-categories-count">{migration.newCategories.length} categories</span>
                  </div>
                  
                  <div class="migration-breakdown">
                    {migration.newCategories.slice(0, 5).map((newCat: any) => (
                      <div class="breakdown-item">
                        <span class="breakdown-category">
                          {CATEGORIES[newCat.category as keyof typeof CATEGORIES] || newCat.category}
                        </span>
                        <span class="breakdown-count">{newCat.count} articles</span>
                        <span class="breakdown-percentage">{newCat.percentage}%</span>
                      </div>
                    ))}
                  </div>
                </div>
              )
            ))}
          </div>
        </section>
      </div>

      <!-- Sample Recategorizations -->
      <section class="preview-section">
        <h2 class="section-title">Sample Recategorizations</h2>
        
        <div class="samples-grid">
          {results
            .filter(r => r.originalCategory !== r.newCategory && r.confidence > 0.7)
            .slice(0, 12)
            .map(result => (
              <div class="sample-card">
                <div class="sample-header">
                  <div class="category-change">
                    <span class="old-cat">{result.originalCategory}</span>
                    <span class="arrow">‚Üí</span>
                    <span class="new-cat">
                      {CATEGORIES[result.newCategory as keyof typeof CATEGORIES] || result.newCategory}
                    </span>
                  </div>
                  <div class="confidence-score">
                    {Math.round(result.confidence * 100)}% confidence
                  </div>
                </div>
                
                <div class="sample-content">
                  <h4 class="sample-title">{result.article.title}</h4>
                  <p class="sample-excerpt">{result.article.summary?.slice(0, 120)}...</p>
                  <div class="sample-reason">{result.reason}</div>
                </div>
                
                <div class="sample-meta">
                  <span class="sample-source">{result.article.sourceId}</span>
                  <span class="sample-date">
                    {new Date(result.article.publishedAt).toLocaleDateString()}
                  </span>
                </div>
              </div>
            ))}
        </div>
      </section>

      <!-- Action Panel -->
      <section class="action-panel">
        <div class="panel-content">
          <div class="panel-info">
            <h3>Ready to Apply Changes?</h3>
            <p>
              This preview shows how {sampleArticles.length} sample articles would be recategorized. 
              The full migration will process all {allArticles.length.toLocaleString()} articles 
              and create backup copies of your existing data.
            </p>
          </div>
          
          <div class="panel-actions">
            <button class="panel-btn secondary">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
                <path d="M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-5 14H7v-2h7v2zm3-4H7v-2h10v2zm0-4H7V7h10v2z"/>
              </svg>
              Export Preview
            </button>
            
            <button class="panel-btn primary" onclick="window.location.href='/admin/recategorization/run'">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
                <path d="M8 5v14l11-7z"/>
              </svg>
              Run Full Migration
            </button>
          </div>
        </div>
      </section>
    </div>
  </div>
</Layout>

<style>
  .admin-page {
    min-height: 100vh;
    background: #f8fafc;
  }

  .container {
    max-width: 1400px;
    margin: 0 auto;
    padding: 0 20px;
  }

  /* Header */
  .admin-header {
    background: white;
    border-bottom: 1px solid #e8ebed;
    padding: 24px 0;
    position: sticky;
    top: 0;
    z-index: 100;
  }

  .header-content {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .header-left {
    display: flex;
    align-items: center;
    gap: 16px;
  }

  .back-link {
    color: #6b7280;
    text-decoration: none;
    padding: 8px;
    border-radius: 6px;
    transition: all 0.15s ease;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .back-link:hover {
    background: #f3f4f6;
    color: #2a2a2a;
  }

  .header-title {
    display: flex;
    flex-direction: column;
  }

  .page-title {
    font-size: 24px;
    font-weight: 600;
    color: #2a2a2a;
    margin: 0;
    line-height: 1.2;
  }

  .page-subtitle {
    font-size: 14px;
    color: #6b7280;
    margin-top: 4px;
  }

  .header-actions {
    display: flex;
    gap: 12px;
  }

  .action-btn {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 10px 16px;
    border: 1px solid #e8ebed;
    border-radius: 6px;
    font-size: 14px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.15s ease;
    text-decoration: none;
  }

  .action-btn.primary {
    background: #1e40af;
    color: white;
    border-color: #1e40af;
  }

  .action-btn.primary:hover {
    background: #1d4ed8;
    border-color: #1d4ed8;
  }

  .action-btn.secondary {
    background: white;
    color: #6b7280;
  }

  .action-btn.secondary:hover {
    background: #f8fafc;
    color: #2a2a2a;
    border-color: #d1d5db;
  }

  /* Summary Section */
  .summary-section {
    padding: 32px 0;
  }

  .summary-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 20px;
  }

  .summary-card {
    background: white;
    border: 1px solid #e8ebed;
    border-radius: 12px;
    padding: 24px;
    display: flex;
    align-items: center;
    gap: 16px;
    transition: all 0.15s ease;
  }

  .summary-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.04);
    border-color: #d1d5db;
  }

  .card-icon {
    font-size: 32px;
    width: 56px;
    height: 56px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: #f8fafc;
    border-radius: 12px;
    flex-shrink: 0;
  }

  .card-content {
    flex: 1;
  }

  .card-value {
    font-size: 28px;
    font-weight: 700;
    color: #2a2a2a;
    line-height: 1.2;
  }

  .card-label {
    font-size: 14px;
    color: #6b7280;
    font-weight: 500;
    margin-top: 4px;
  }

  .card-note {
    font-size: 12px;
    color: #9ca3af;
    margin-top: 2px;
  }

  /* Preview Grid */
  .preview-grid {
    display: grid;
    gap: 32px;
    margin-bottom: 32px;
  }

  .preview-section {
    background: white;
    border: 1px solid #e8ebed;
    border-radius: 12px;
    padding: 32px;
  }

  .section-title {
    font-size: 20px;
    font-weight: 600;
    color: #2a2a2a;
    margin: 0 0 24px 0;
  }

  /* Distribution Comparison */
  .distribution-comparison {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 32px;
  }

  .distribution-title {
    font-size: 16px;
    font-weight: 600;
    color: #2a2a2a;
    margin-bottom: 16px;
  }

  .category-list {
    display: flex;
    flex-direction: column;
    gap: 12px;
  }

  .category-item {
    display: flex;
    flex-direction: column;
    gap: 4px;
  }

  .category-info {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .category-name {
    font-size: 13px;
    font-weight: 500;
    color: #2a2a2a;
  }

  .category-count {
    font-size: 12px;
    color: #6b7280;
  }

  .category-bar {
    width: 100%;
    height: 6px;
    background: #f1f3f4;
    border-radius: 3px;
    overflow: hidden;
  }

  .category-fill {
    height: 100%;
    border-radius: 3px;
    transition: width 0.3s ease;
  }

  .category-fill.old {
    background: #94a3b8;
  }

  .category-fill.new {
    background: #3b82f6;
  }

  /* Migration Summary */
  .migration-summary {
    display: flex;
    flex-direction: column;
    gap: 20px;
  }

  .migration-item {
    border: 1px solid #e8ebed;
    border-radius: 8px;
    padding: 16px;
    background: #f8fafc;
  }

  .migration-header {
    display: flex;
    align-items: center;
    gap: 12px;
    margin-bottom: 12px;
  }

  .old-category {
    font-size: 14px;
    font-weight: 500;
    color: #6b7280;
    background: #f1f3f4;
    padding: 4px 8px;
    border-radius: 4px;
  }

  .new-categories-count {
    font-size: 12px;
    color: #3b82f6;
    font-weight: 500;
  }

  .migration-breakdown {
    display: grid;
    gap: 8px;
  }

  .breakdown-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 8px 12px;
    background: white;
    border-radius: 4px;
    font-size: 13px;
  }

  .breakdown-category {
    font-weight: 500;
    color: #2a2a2a;
  }

  .breakdown-count {
    color: #6b7280;
  }

  .breakdown-percentage {
    color: #3b82f6;
    font-weight: 500;
  }

  /* Sample Cards */
  .samples-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 20px;
  }

  .sample-card {
    border: 1px solid #e8ebed;
    border-radius: 8px;
    padding: 16px;
    background: white;
    transition: all 0.15s ease;
  }

  .sample-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04);
    border-color: #d1d5db;
  }

  .sample-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 12px;
  }

  .category-change {
    display: flex;
    align-items: center;
    gap: 6px;
    font-size: 12px;
  }

  .old-cat {
    background: #f1f3f4;
    color: #6b7280;
    padding: 2px 6px;
    border-radius: 3px;
  }

  .new-cat {
    background: #eff6ff;
    color: #1e40af;
    padding: 2px 6px;
    border-radius: 3px;
    font-weight: 500;
  }

  .arrow {
    color: #9ca3af;
  }

  .confidence-score {
    font-size: 11px;
    color: #059669;
    font-weight: 500;
  }

  .sample-title {
    font-size: 14px;
    font-weight: 500;
    color: #2a2a2a;
    margin-bottom: 6px;
    line-height: 1.3;
  }

  .sample-excerpt {
    font-size: 12px;
    color: #6b7280;
    line-height: 1.4;
    margin-bottom: 8px;
  }

  .sample-reason {
    font-size: 11px;
    color: #9ca3af;
    font-style: italic;
    margin-bottom: 8px;
  }

  .sample-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: 11px;
    color: #9ca3af;
    border-top: 1px solid #f1f3f4;
    padding-top: 8px;
  }

  /* Action Panel */
  .action-panel {
    background: linear-gradient(135deg, #1e40af 0%, #3b82f6 100%);
    border-radius: 12px;
    padding: 32px;
    margin-bottom: 32px;
  }

  .panel-content {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 24px;
  }

  .panel-info h3 {
    font-size: 20px;
    font-weight: 600;
    color: white;
    margin: 0 0 8px 0;
  }

  .panel-info p {
    color: rgba(255, 255, 255, 0.9);
    font-size: 14px;
    line-height: 1.5;
    margin: 0;
  }

  .panel-actions {
    display: flex;
    gap: 12px;
    flex-shrink: 0;
  }

  .panel-btn {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 12px 20px;
    border-radius: 8px;
    font-size: 14px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.15s ease;
    border: none;
    text-decoration: none;
  }

  .panel-btn.primary {
    background: white;
    color: #1e40af;
  }

  .panel-btn.primary:hover {
    background: #f8fafc;
    transform: translateY(-1px);
  }

  .panel-btn.secondary {
    background: rgba(255, 255, 255, 0.2);
    color: white;
    border: 1px solid rgba(255, 255, 255, 0.3);
  }

  .panel-btn.secondary:hover {
    background: rgba(255, 255, 255, 0.3);
  }

  /* Responsive */
  @media (max-width: 1024px) {
    .distribution-comparison {
      grid-template-columns: 1fr;
    }
    
    .panel-content {
      flex-direction: column;
      align-items: stretch;
      text-align: center;
    }
  }

  @media (max-width: 768px) {
    .header-content {
      flex-direction: column;
      gap: 16px;
      align-items: stretch;
    }

    .header-left {
      justify-content: center;
    }

    .header-actions {
      justify-content: center;
    }

    .summary-grid {
      grid-template-columns: 1fr;
    }

    .samples-grid {
      grid-template-columns: 1fr;
    }

    .preview-section {
      padding: 20px;
    }
  }
</style>