---
import { CATEGORIES, SOURCE_CATEGORIES } from '../lib/categories';

export interface Props {
  sourceCounts: Record<string, number>;
  categoryCounts: Record<string, number>;
  currentCategory?: string;
}

const { sourceCounts, categoryCounts, currentCategory } = Astro.props;

// Remove market data section as requested

// Category groups for better navigation
const categoryGroups = {
  'Core Markets': ['markets', 'macro', 'policy'],
  'Sectors': ['technology', 'research'],
  'Analysis': ['blogs', 'videos'],
  'Data': ['filings', 'news']
};

// Top sources by article count
const topSources = Object.entries(sourceCounts)
  .sort(([, a], [, b]) => b - a)
  .slice(0, 8);

// Quick filters - comprehensive filtering options
const quickFilters = [
  { id: 'breaking', label: 'üî• Breaking News', keywords: ['breaking', 'urgent', 'alert', 'emergency', 'crisis'] },
  { id: 'earnings', label: 'üìä Earnings', keywords: ['earnings', 'quarterly', 'results', 'profit', 'revenue', 'guidance'] },
  { id: 'fed', label: 'üèõÔ∏è Central Banking', keywords: ['federal reserve', 'fed', 'interest rates', 'monetary policy', 'ecb', 'central bank'] },
  { id: 'crypto', label: '‚Çø Crypto', keywords: ['bitcoin', 'crypto', 'cryptocurrency', 'blockchain', 'ethereum', 'defi'] },
  { id: 'ma', label: 'ü§ù M&A', keywords: ['merger', 'acquisition', 'buyout', 'takeover', 'deal', 'acquired'] },
  { id: 'ipos', label: 'üöÄ IPOs', keywords: ['ipo', 'initial public offering', 'listing', 'debut', 'goes public'] },
  { id: 'commodities', label: 'üõ¢Ô∏è Commodities', keywords: ['oil', 'gold', 'copper', 'commodities', 'energy', 'metals'] },
  { id: 'tech', label: 'üíª Tech', keywords: ['technology', 'ai', 'artificial intelligence', 'software', 'tech', 'startup'] }
];
---

<aside class="sidebar">
  <!-- Market Data Section Removed -->

  <!-- Category Navigation -->
  <div class="sidebar-section">
    <h3 class="sidebar-title">Categories</h3>
    {Object.entries(categoryGroups).map(([groupName, categories]) => (
      <div class="category-group">
        <div class="group-label">{groupName}</div>
        <ul class="category-list">
          {categories.map(categoryKey => {
            const count = categoryCounts[categoryKey] || 0;
            if (count === 0) return null;
            return (
              <li class="category-item">
                <a 
                  href={`/${categoryKey}`}
                  class={`category-link ${currentCategory === categoryKey ? 'active' : ''}`}
                >
                  <span class="category-name">{CATEGORIES[categoryKey as keyof typeof CATEGORIES]}</span>
                  <span class="category-count">{count}</span>
                </a>
              </li>
            );
          })}
        </ul>
      </div>
    ))}
  </div>

  <!-- Quick Filters -->
  <div class="sidebar-section">
    <h3 class="sidebar-title">Quick Filters</h3>
    <div class="filter-buttons">
      {quickFilters.map(filter => (
        <button class="filter-btn" data-filter={filter.id} data-keywords={filter.keywords.join(',')}>
          <span>{filter.label}</span>
          <span class="filter-count">0</span>
        </button>
      ))}
    </div>
  </div>

  <!-- Source Categories -->
  <div class="sidebar-section">
    <h3 class="sidebar-title">News Sources</h3>
    {Object.entries(SOURCE_CATEGORIES).slice(0, 4).map(([categoryName, sourceIds]) => (
      <div class="source-category">
        <div class="source-category-label">{categoryName}</div>
        <ul class="source-list">
          {sourceIds.slice(0, 4).map(sourceId => {
            const count = sourceCounts[sourceId] || 0;
            const displayName = sourceId
              .replace(/-/g, ' ')
              .replace(/\b\w/g, l => l.toUpperCase())
              .replace('Et Markets', 'ET Markets')
              .replace('Thehindubusinessline', 'Hindu BusinessLine')
              .replace('Moneycontrol News', 'MoneyControl')
              .replace('Ndtv Profit Rss', 'NDTV Profit')
              .replace('Rbi Press', 'RBI Press')
              .replace('Sebi News', 'SEBI News')
              .replace('Bse Notices', 'BSE Notices')
              .replace('Bloomberg Markets', 'Bloomberg')
              .replace('Ft Markets', 'Financial Times')
              .replace('Reuters Business', 'Reuters')
              .replace('Economist Finance', 'Economist')
              .replace('Nber Papers', 'NBER')
              .replace('Harvard Hbs Youtube', 'Harvard Business')
              .replace('Cfa Institute Blog', 'CFA Institute')
              .replace('Nse Online Announcements', 'NSE Announcements');
            return (
              <li class="source-item">
                <a href={`/source/${sourceId}`} class="source-link">
                  <span class="source-name">{displayName}</span>
                  <span class="source-count">{count}</span>
                </a>
              </li>
            );
          })}
        </ul>
      </div>
    ))}
  </div>

  <!-- Market Calendar -->
  <div class="sidebar-section">
    <h3 class="sidebar-title">This Week</h3>
    <div class="calendar-link-container">
      <a href="https://zerodha.com/markets/calendar/" target="_blank" rel="noopener noreferrer" class="calendar-link">
        <div class="calendar-icon">üìÖ</div>
        <div class="calendar-content">
          <div class="calendar-title">Market Calendar</div>
          <div class="calendar-subtitle">View upcoming market events & earnings</div>
        </div>
        <div class="external-icon">‚Üó</div>
      </a>
    </div>
  </div>
</aside>

<style>
  .sidebar {
    background: #ffffff;
    border-radius: 8px;
    border: 1px solid #e8ebed;
    overflow: hidden;
    max-height: calc(100vh - 120px);
    overflow-y: auto;
    position: sticky;
    top: 20px;
  }

  /* Custom scrollbar */
  .sidebar::-webkit-scrollbar {
    width: 4px;
  }

  .sidebar::-webkit-scrollbar-track {
    background: #f8fafc;
  }

  .sidebar::-webkit-scrollbar-thumb {
    background: #e8ebed;
    border-radius: 2px;
  }

  .sidebar::-webkit-scrollbar-thumb:hover {
    background: #d1d5db;
  }

  .sidebar-section {
    padding: 12px 16px;
    border-bottom: 1px solid #e8ebed;
  }

  .sidebar-section:last-child {
    border-bottom: none;
  }

  .sidebar-title {
    font-size: 11px;
    font-weight: 600;
    color: #9ca3af;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    margin-bottom: 8px;
  }

  /* Market Data */
  .market-data {
    display: flex;
    flex-direction: column;
    gap: 8px;
  }

  .market-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 8px 0;
  }

  .market-symbol {
    font-size: 12px;
    font-weight: 500;
    color: #6b7280;
  }

  .market-values {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    gap: 2px;
  }

  .market-value {
    font-size: 13px;
    font-weight: 600;
    color: #2a2a2a;
  }

  .market-change {
    font-size: 11px;
    font-weight: 500;
    padding: 2px 6px;
    border-radius: 3px;
  }

  .market-change.positive {
    color: #059669;
    background: #d1fae5;
  }

  .market-change.negative {
    color: #dc2626;
    background: #fee2e2;
  }

  /* Category Navigation */
  .category-group {
    margin-bottom: 16px;
  }

  .category-group:last-child {
    margin-bottom: 0;
  }

  .group-label {
    font-size: 10px;
    font-weight: 600;
    color: #9ca3af;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    margin-bottom: 6px;
    padding-bottom: 4px;
    border-bottom: 1px solid #f3f4f6;
  }

  .category-list {
    list-style: none;
  }

  .category-item {
    margin-bottom: 2px;
  }

  .category-link {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 6px 8px;
    color: #6b7280;
    text-decoration: none;
    border-radius: 4px;
    font-size: 13px;
    transition: all 0.15s ease;
  }

  .category-link:hover {
    color: #2a2a2a;
    background: #f8fafc;
  }

  .category-link.active {
    color: #1e40af;
    background: #eff6ff;
  }

  .category-count {
    font-size: 11px;
    color: #9ca3af;
    background: #f3f4f6;
    padding: 2px 6px;
    border-radius: 10px;
    min-width: 18px;
    text-align: center;
  }

  .category-link.active .category-count {
    background: #dbeafe;
    color: #1e40af;
  }

  /* Filter buttons */
  .filter-buttons {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 4px;
  }

  .filter-btn {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 6px 8px;
    background: #f8fafc;
    border: 1px solid #e8ebed;
    border-radius: 4px;
    font-size: 11px;
    color: #6b7280;
    text-align: left;
    cursor: pointer;
    transition: all 0.15s ease;
    min-height: 32px;
  }

  .filter-btn:hover {
    background: #f3f4f6;
    color: #2a2a2a;
    border-color: #d1d5db;
  }

  .filter-btn.active {
    background: #eff6ff;
    color: #1e40af;
    border-color: #dbeafe;
  }

  .filter-count {
    font-size: 9px;
    color: #9ca3af;
    background: #ffffff;
    padding: 1px 4px;
    border-radius: 6px;
    min-width: 14px;
    text-align: center;
    font-weight: 500;
  }

  /* Source Categories */
  .source-category {
    margin-bottom: 12px;
  }

  .source-category:last-child {
    margin-bottom: 0;
  }

  .source-category-label {
    font-size: 10px;
    font-weight: 600;
    color: #9ca3af;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    margin-bottom: 4px;
    padding-bottom: 2px;
    border-bottom: 1px solid #f3f4f6;
  }

  /* Source list */
  .source-list {
    list-style: none;
    margin-bottom: 8px;
  }

  .source-item {
    margin-bottom: 2px;
  }

  .source-link {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 6px 8px;
    color: #6b7280;
    text-decoration: none;
    border-radius: 4px;
    font-size: 12px;
    transition: all 0.15s ease;
  }

  .source-link:hover {
    color: #2a2a2a;
    background: #f8fafc;
  }

  .source-name {
    font-weight: 500;
  }

  .source-count {
    font-size: 10px;
    color: #9ca3af;
    background: #f3f4f6;
    padding: 2px 6px;
    border-radius: 8px;
    min-width: 16px;
    text-align: center;
  }

  /* Market Calendar Link */
  .calendar-link-container {
    border-radius: 6px;
    overflow: hidden;
  }

  .calendar-link {
    display: flex;
    align-items: center;
    padding: 12px;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: #ffffff;
    text-decoration: none;
    transition: all 0.2s ease;
    gap: 10px;
  }

  .calendar-link:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }

  .calendar-icon {
    font-size: 20px;
    flex-shrink: 0;
  }

  .calendar-content {
    flex: 1;
  }

  .calendar-title {
    font-size: 13px;
    font-weight: 600;
    color: #ffffff;
    margin-bottom: 2px;
  }

  .calendar-subtitle {
    font-size: 11px;
    color: rgba(255, 255, 255, 0.8);
    line-height: 1.3;
  }

  .external-icon {
    font-size: 14px;
    color: rgba(255, 255, 255, 0.8);
    flex-shrink: 0;
  }
</style>

<script>
  // Filter functionality
  const filterButtons = document.querySelectorAll('.filter-btn');
  const articles = document.querySelectorAll('.article');
  
  // Count matching articles and update filter counts on load
  function updateFilterCounts() {
    filterButtons.forEach(btn => {
      const keywords = btn.getAttribute('data-keywords')?.split(',') || [];
      const count = countMatchingArticles(keywords);
      const countElement = btn.querySelector('.filter-count');
      if (countElement) {
        countElement.textContent = count.toString();
      }
    });
  }
  
  function countMatchingArticles(keywords) {
    let count = 0;
    articles.forEach(article => {
      const title = article.querySelector('.article-title')?.textContent?.toLowerCase() || '';
      const excerpt = article.querySelector('.article-excerpt')?.textContent?.toLowerCase() || '';
      const text = title + ' ' + excerpt;
      
      if (keywords.some(keyword => text.includes(keyword.toLowerCase()))) {
        count++;
      }
    });
    return count;
  }
  
  function filterArticles(keywords, isActive) {
    articles.forEach(article => {
      const title = article.querySelector('.article-title')?.textContent?.toLowerCase() || '';
      const excerpt = article.querySelector('.article-excerpt')?.textContent?.toLowerCase() || '';
      const text = title + ' ' + excerpt;
      
      const matches = keywords.some(keyword => text.includes(keyword.toLowerCase()));
      
      if (isActive) {
        // Show only matching articles
        article.style.display = matches ? 'block' : 'none';
      } else {
        // Show all articles when filter is disabled
        const anyFilterActive = document.querySelector('.filter-btn.active');
        if (!anyFilterActive) {
          article.style.display = 'block';
        }
      }
    });
  }
  
  filterButtons.forEach(btn => {
    btn.addEventListener('click', () => {
      const keywords = btn.getAttribute('data-keywords')?.split(',') || [];
      const isActive = btn.classList.toggle('active');
      
      // Remove active class from other filters for single-filter mode
      filterButtons.forEach(otherBtn => {
        if (otherBtn !== btn) {
          otherBtn.classList.remove('active');
        }
      });
      
      // Apply filter
      if (isActive) {
        filterArticles(keywords, true);
      } else {
        // Show all articles when no filter is active
        articles.forEach(article => {
          article.style.display = 'block';
        });
      }
    });
  });
  
  // Initialize filter counts when page loads
  document.addEventListener('DOMContentLoaded', updateFilterCounts);
  
  // Update counts when articles are dynamically loaded
  const observer = new MutationObserver(updateFilterCounts);
  observer.observe(document.querySelector('.articles') || document.body, {
    childList: true,
    subtree: true
  });
</script>