---
import { CATEGORIES } from '../lib/categories';

export interface Props {
  sourceCounts: Record<string, number>;
  categoryCounts: Record<string, number>;
  currentCategory?: string;
}

const { sourceCounts, categoryCounts, currentCategory } = Astro.props;

// Remove market data section as requested

// Category groups for better navigation
const categoryGroups = {
  'Core Markets': ['markets', 'macro', 'policy'],
  'Sectors': ['technology', 'research'],
  'Analysis': ['blogs', 'videos'],
  'Data': ['filings', 'news']
};

// Top sources by article count
const topSources = Object.entries(sourceCounts)
  .sort(([, a], [, b]) => b - a)
  .slice(0, 8);

// Quick filters
const quickFilters = [
  { id: 'breaking', label: 'üî• Breaking News', count: 12 },
  { id: 'earnings', label: 'üìä Earnings', count: 28 },
  { id: 'fed', label: 'üèõÔ∏è Fed News', count: 5 },
  { id: 'crypto', label: '‚Çø Crypto', count: 15 }
];
---

<aside class="sidebar">
  <!-- Market Data Section Removed -->

  <!-- Category Navigation -->
  <div class="sidebar-section">
    <h3 class="sidebar-title">Categories</h3>
    {Object.entries(categoryGroups).map(([groupName, categories]) => (
      <div class="category-group">
        <div class="group-label">{groupName}</div>
        <ul class="category-list">
          {categories.map(categoryKey => {
            const count = categoryCounts[categoryKey] || 0;
            if (count === 0) return null;
            return (
              <li class="category-item">
                <a 
                  href={`/${categoryKey}`}
                  class={`category-link ${currentCategory === categoryKey ? 'active' : ''}`}
                >
                  <span class="category-name">{CATEGORIES[categoryKey as keyof typeof CATEGORIES]}</span>
                  <span class="category-count">{count}</span>
                </a>
              </li>
            );
          })}
        </ul>
      </div>
    ))}
  </div>

  <!-- Quick Filters -->
  <div class="sidebar-section">
    <h3 class="sidebar-title">Quick Filters</h3>
    <div class="filter-buttons">
      {quickFilters.map(filter => (
        <button class="filter-btn" data-filter={filter.id}>
          <span>{filter.label}</span>
          <span class="filter-count">{filter.count}</span>
        </button>
      ))}
    </div>
  </div>

  <!-- Top Sources -->
  <div class="sidebar-section">
    <h3 class="sidebar-title">Top Sources</h3>
    <ul class="source-list">
      {topSources.map(([sourceId, count]) => (
        <li class="source-item">
          <a href={`/source/${sourceId}`} class="source-link">
            <span class="source-name">{sourceId.replace(/-/g, ' ').replace(/\b\w/g, l => l.toUpperCase())}</span>
            <span class="source-count">{count}</span>
          </a>
        </li>
      ))}
    </ul>
  </div>

  <!-- Economic Calendar -->
  <div class="sidebar-section">
    <h3 class="sidebar-title">This Week</h3>
    <div class="calendar-events">
      <div class="calendar-event">
        <div class="event-date">Aug 2</div>
        <div class="event-title">Jobs Report</div>
        <div class="event-impact high">High Impact</div>
      </div>
      <div class="calendar-event">
        <div class="event-date">Aug 5</div>
        <div class="event-title">Fed Meeting</div>
        <div class="event-impact medium">Medium</div>
      </div>
      <div class="calendar-event">
        <div class="event-date">Aug 7</div>
        <div class="event-title">CPI Data</div>
        <div class="event-impact high">High Impact</div>
      </div>
    </div>
  </div>
</aside>

<style>
  .sidebar {
    background: #ffffff;
    border-radius: 8px;
    border: 1px solid #e8ebed;
    overflow: hidden;
  }

  .sidebar-section {
    padding: 16px;
    border-bottom: 1px solid #e8ebed;
  }

  .sidebar-section:last-child {
    border-bottom: none;
  }

  .sidebar-title {
    font-size: 11px;
    font-weight: 600;
    color: #9ca3af;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    margin-bottom: 12px;
  }

  /* Market Data */
  .market-data {
    display: flex;
    flex-direction: column;
    gap: 8px;
  }

  .market-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 8px 0;
  }

  .market-symbol {
    font-size: 12px;
    font-weight: 500;
    color: #6b7280;
  }

  .market-values {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    gap: 2px;
  }

  .market-value {
    font-size: 13px;
    font-weight: 600;
    color: #2a2a2a;
  }

  .market-change {
    font-size: 11px;
    font-weight: 500;
    padding: 2px 6px;
    border-radius: 3px;
  }

  .market-change.positive {
    color: #059669;
    background: #d1fae5;
  }

  .market-change.negative {
    color: #dc2626;
    background: #fee2e2;
  }

  /* Category Navigation */
  .category-group {
    margin-bottom: 16px;
  }

  .category-group:last-child {
    margin-bottom: 0;
  }

  .group-label {
    font-size: 10px;
    font-weight: 600;
    color: #9ca3af;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    margin-bottom: 6px;
    padding-bottom: 4px;
    border-bottom: 1px solid #f3f4f6;
  }

  .category-list {
    list-style: none;
  }

  .category-item {
    margin-bottom: 2px;
  }

  .category-link {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 6px 8px;
    color: #6b7280;
    text-decoration: none;
    border-radius: 4px;
    font-size: 13px;
    transition: all 0.15s ease;
  }

  .category-link:hover {
    color: #2a2a2a;
    background: #f8fafc;
  }

  .category-link.active {
    color: #1e40af;
    background: #eff6ff;
  }

  .category-count {
    font-size: 11px;
    color: #9ca3af;
    background: #f3f4f6;
    padding: 2px 6px;
    border-radius: 10px;
    min-width: 18px;
    text-align: center;
  }

  .category-link.active .category-count {
    background: #dbeafe;
    color: #1e40af;
  }

  /* Filter buttons */
  .filter-buttons {
    display: flex;
    flex-direction: column;
    gap: 6px;
  }

  .filter-btn {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 8px 10px;
    background: #f8fafc;
    border: 1px solid #e8ebed;
    border-radius: 5px;
    font-size: 12px;
    color: #6b7280;
    text-align: left;
    cursor: pointer;
    transition: all 0.15s ease;
  }

  .filter-btn:hover {
    background: #f3f4f6;
    color: #2a2a2a;
    border-color: #d1d5db;
  }

  .filter-btn.active {
    background: #eff6ff;
    color: #1e40af;
    border-color: #dbeafe;
  }

  .filter-count {
    font-size: 10px;
    color: #9ca3af;
    background: #ffffff;
    padding: 2px 6px;
    border-radius: 8px;
    min-width: 16px;
    text-align: center;
  }

  /* Source list */
  .source-list {
    list-style: none;
  }

  .source-item {
    margin-bottom: 2px;
  }

  .source-link {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 6px 8px;
    color: #6b7280;
    text-decoration: none;
    border-radius: 4px;
    font-size: 12px;
    transition: all 0.15s ease;
  }

  .source-link:hover {
    color: #2a2a2a;
    background: #f8fafc;
  }

  .source-name {
    font-weight: 500;
  }

  .source-count {
    font-size: 10px;
    color: #9ca3af;
    background: #f3f4f6;
    padding: 2px 6px;
    border-radius: 8px;
    min-width: 16px;
    text-align: center;
  }

  /* Economic Calendar */
  .calendar-events {
    display: flex;
    flex-direction: column;
    gap: 8px;
  }

  .calendar-event {
    padding: 8px;
    background: #f8fafc;
    border-radius: 5px;
    border-left: 3px solid #e8ebed;
  }

  .event-date {
    font-size: 10px;
    font-weight: 600;
    color: #9ca3af;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    margin-bottom: 2px;
  }

  .event-title {
    font-size: 12px;
    font-weight: 500;
    color: #2a2a2a;
    margin-bottom: 4px;
  }

  .event-impact {
    font-size: 10px;
    font-weight: 500;
    padding: 2px 6px;
    border-radius: 3px;
    text-transform: uppercase;
    letter-spacing: 0.3px;
  }

  .event-impact.high {
    color: #dc2626;
    background: #fee2e2;
  }

  .event-impact.medium {
    color: #d97706;
    background: #fef3c7;
  }

  .event-impact.low {
    color: #059669;
    background: #d1fae5;
  }
</style>

<script>
  // Filter functionality
  const filterButtons = document.querySelectorAll('.filter-btn');
  
  filterButtons.forEach(btn => {
    btn.addEventListener('click', () => {
      const filter = btn.getAttribute('data-filter');
      btn.classList.toggle('active');
      
      // Here you would implement the actual filtering logic
      console.log('Filter applied:', filter);
    });
  });
</script>