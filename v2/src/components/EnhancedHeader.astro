---
import { formatTimeAgo } from '../lib/utils';

export interface Props {
  lastUpdate?: Date;
  totalArticles?: number;
  currentCategory?: string;
}

const { lastUpdate = new Date(), totalArticles = 0, currentCategory } = Astro.props;

// Quick access categories
const quickAccess = [
  { key: 'markets', label: 'Markets', icon: 'üìà' },
  { key: 'macro', label: 'Macro', icon: 'üèõÔ∏è' },
  { key: 'earnings', label: 'Earnings', icon: 'üí∞' },
  { key: 'crypto', label: 'Crypto', icon: '‚Çø' },
];
---

<header class="header">
  <div class="container">
    <div class="header-top">
      <div class="header-brand">
        <a href="/" class="logo">
          <span class="logo-icon">üìä</span>
          <span class="logo-text">Markets Feeds</span>
          <span class="beta-badge">v2</span>
        </a>
        <span class="tagline">Real-time Financial Intelligence</span>
      </div>
      
      <!-- Quick Actions Bar -->
      <div class="header-actions">
        <!-- Quick Category Access -->
        <div class="quick-categories">
          {quickAccess.map(cat => (
            <a 
              href={`/${cat.key}`} 
              class={`quick-category ${currentCategory === cat.key ? 'active' : ''}`}
              title={cat.label}
            >
              <span class="quick-icon">{cat.icon}</span>
              <span class="quick-label">{cat.label}</span>
            </a>
          ))}
        </div>

        <!-- Header Stats -->
        <div class="header-stats">
          <div class="stat">
            <span class="stat-value">{totalArticles.toLocaleString()}</span>
            <span class="stat-label">articles</span>
          </div>
          <div class="stat update-stat">
            <span class="stat-value">{formatTimeAgo(lastUpdate)}</span>
            <span class="stat-label">updated</span>
          </div>
        </div>

        <!-- Action Links -->
        <div class="header-links">
          <a href="/search" class="header-link search-link" title="Search Articles">
            <svg width="18" height="18" viewBox="0 0 24 24" fill="currentColor">
              <path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/>
            </svg>
          </a>
          
          <a href="/sources" class="header-link sources-link">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
              <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
            </svg>
            Sources
          </a>
          
          <div class="export-menu">
            <button class="header-link export-toggle" title="Export Options">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
                <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"/>
                <polyline points="14,2 14,8 20,8"/>
                <line x1="16" y1="13" x2="8" y2="13"/>
                <line x1="16" y1="17" x2="8" y2="17"/>
                <polyline points="10,9 9,9 8,9"/>
              </svg>
            </button>
            <div class="export-dropdown">
              <a href="/feeds-export.opml" class="export-item">
                <span class="export-icon">üìã</span>
                <div class="export-details">
                  <span class="export-title">OPML Export</span>
                  <span class="export-desc">Import into RSS readers</span>
                </div>
              </a>
              <a href="/feeds-export.json" class="export-item">
                <span class="export-icon">üìÑ</span>
                <div class="export-details">
                  <span class="export-title">JSON Export</span>
                  <span class="export-desc">Raw feed data</span>
                </div>
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Enhanced Search Bar -->
    <div class="header-bottom">
      <form method="GET" action="/search" class="enhanced-search">
        <div class="search-container">
          <input 
            type="search" 
            name="q" 
            class="search-input" 
            placeholder="Search across all feeds... (try: earnings, fed, crypto, AI)"
            autocomplete="off"
          />
          <button type="submit" class="search-submit">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
              <path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/>
            </svg>
          </button>
        </div>
        
        <!-- Popular Search Tags -->
        <div class="search-suggestions">
          <span class="suggestions-label">Popular:</span>
          {['earnings', 'fed rates', 'crypto', 'AI', 'inflation', 'IPO'].map(term => (
            <button type="button" class="suggestion-tag" data-search={term}>
              {term}
            </button>
          ))}
        </div>
      </form>
    </div>
  </div>
</header>

<style>
  .header {
    background: linear-gradient(135deg, rgba(250, 251, 252, 0.98) 0%, rgba(248, 250, 252, 0.98) 100%);
    border-bottom: 1px solid #e8ebed;
    backdrop-filter: blur(20px);
    position: sticky;
    top: 0;
    z-index: 100;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
  }

  .header-top {
    padding: 12px 0;
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 24px;
  }

  .header-brand {
    display: flex;
    align-items: center;
    gap: 16px;
  }

  .logo {
    display: flex;
    align-items: center;
    gap: 8px;
    text-decoration: none;
    color: #2a2a2a;
    font-weight: 700;
    font-size: 20px;
    position: relative;
  }

  .logo-icon {
    font-size: 28px;
    filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.1));
  }

  .beta-badge {
    background: linear-gradient(135deg, #3b82f6, #1d4ed8);
    color: white;
    font-size: 10px;
    font-weight: 600;
    padding: 2px 6px;
    border-radius: 8px;
    margin-left: 4px;
  }

  .logo:hover .logo-text {
    color: #1e40af;
  }

  .tagline {
    color: #6b7280;
    font-size: 13px;
    font-weight: 500;
    padding-left: 16px;
    border-left: 2px solid #e8ebed;
  }

  .header-actions {
    display: flex;
    align-items: center;
    gap: 24px;
  }

  /* Quick Categories */
  .quick-categories {
    display: flex;
    gap: 4px;
    background: #f8fafc;
    padding: 4px;
    border-radius: 8px;
    border: 1px solid #e5e7eb;
  }

  .quick-category {
    display: flex;
    align-items: center;
    gap: 6px;
    padding: 6px 10px;
    border-radius: 4px;
    text-decoration: none;
    color: #6b7280;
    font-size: 13px;
    font-weight: 500;
    transition: all 0.15s ease;
    white-space: nowrap;
  }

  .quick-category:hover {
    background: #ffffff;
    color: #374151;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
  }

  .quick-category.active {
    background: #2563eb;
    color: white;
    box-shadow: 0 1px 3px rgba(37, 99, 235, 0.3);
  }

  .quick-icon {
    font-size: 14px;
  }

  .quick-label {
    font-weight: 600;
  }

  /* Header Stats */
  .header-stats {
    display: flex;
    align-items: center;
    gap: 20px;
  }

  .stat {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
  }

  .stat-value {
    font-size: 16px;
    font-weight: 700;
    color: #2a2a2a;
    line-height: 1;
  }

  .stat-label {
    font-size: 10px;
    color: #9ca3af;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    font-weight: 600;
    margin-top: 2px;
  }

  .update-stat .stat-value {
    color: #059669;
    font-size: 14px;
  }

  /* Header Links */
  .header-links {
    display: flex;
    align-items: center;
    gap: 8px;
  }

  .header-link {
    display: flex;
    align-items: center;
    gap: 6px;
    color: #6b7280;
    text-decoration: none;
    font-size: 14px;
    font-weight: 500;
    padding: 8px 12px;
    border-radius: 6px;
    transition: all 0.15s ease;
    border: 1px solid transparent;
  }

  .header-link:hover {
    color: #374151;
    background: #f9fafb;
    border-color: #e5e7eb;
  }

  .search-link {
    background: #eff6ff;
    color: #2563eb;
    border-color: #dbeafe;
  }

  .search-link:hover {
    background: #dbeafe;
    color: #1d4ed8;
  }

  .sources-link {
    background: #f0fdf4;
    color: #16a34a;
    border-color: #dcfce7;
  }

  .sources-link:hover {
    background: #dcfce7;
    color: #15803d;
  }

  /* Export Menu */
  .export-menu {
    position: relative;
  }

  .export-toggle {
    background: #fef3f2;
    color: #dc2626;
    border-color: #fecaca;
  }

  .export-toggle:hover {
    background: #fecaca;
    color: #b91c1c;
  }

  .export-dropdown {
    position: absolute;
    top: 100%;
    right: 0;
    margin-top: 8px;
    min-width: 220px;
    background: #ffffff;
    border: 1px solid #e5e7eb;
    border-radius: 8px;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
    padding: 8px;
    opacity: 0;
    visibility: hidden;
    transform: translateY(-10px);
    transition: all 0.2s ease;
    z-index: 110;
  }

  .export-menu:hover .export-dropdown {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }

  .export-item {
    display: flex;
    align-items: center;
    gap: 12px;
    padding: 10px;
    border-radius: 6px;
    text-decoration: none;
    color: #374151;
    transition: all 0.15s ease;
  }

  .export-item:hover {
    background: #f9fafb;
    color: #1f2937;
  }

  .export-icon {
    font-size: 18px;
    opacity: 0.8;
  }

  .export-details {
    display: flex;
    flex-direction: column;
  }

  .export-title {
    font-size: 14px;
    font-weight: 600;
    line-height: 1;
  }

  .export-desc {
    font-size: 12px;
    color: #6b7280;
    margin-top: 2px;
  }

  /* Enhanced Search */
  .header-bottom {
    padding: 16px 0 20px 0;
    border-top: 1px solid #f3f4f6;
    background: linear-gradient(135deg, rgba(248, 250, 252, 0.5) 0%, rgba(241, 245, 249, 0.5) 100%);
  }

  .enhanced-search {
    max-width: 800px;
    margin: 0 auto;
  }

  .search-container {
    display: flex;
    background: white;
    border: 2px solid #e5e7eb;
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
    transition: all 0.2s ease;
  }

  .search-container:focus-within {
    border-color: #3b82f6;
    box-shadow: 0 0 0 4px rgba(59, 130, 246, 0.1), 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  .search-input {
    flex: 1;
    padding: 14px 18px;
    border: none;
    border-radius: 10px;
    font-size: 16px;
    background: transparent;
    outline: none;
  }

  .search-input::placeholder {
    color: #9ca3af;
  }

  .search-submit {
    padding: 14px 18px;
    background: #3b82f6;
    color: white;
    border: none;
    border-radius: 0 10px 10px 0;
    cursor: pointer;
    transition: all 0.15s ease;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .search-submit:hover {
    background: #2563eb;
  }

  /* Search Suggestions */
  .search-suggestions {
    display: flex;
    align-items: center;
    gap: 8px;
    margin-top: 12px;
    flex-wrap: wrap;
  }

  .suggestions-label {
    font-size: 12px;
    color: #6b7280;
    font-weight: 500;
    margin-right: 4px;
  }

  .suggestion-tag {
    padding: 4px 10px;
    background: #f3f4f6;
    border: 1px solid #e5e7eb;
    border-radius: 16px;
    font-size: 12px;
    color: #6b7280;
    cursor: pointer;
    transition: all 0.15s ease;
    white-space: nowrap;
  }

  .suggestion-tag:hover {
    background: #3b82f6;
    color: white;
    border-color: #3b82f6;
  }

  /* Responsive Design */
  @media (max-width: 1024px) {
    .quick-categories {
      display: none;
    }
    
    .header-actions {
      gap: 16px;
    }
  }

  @media (max-width: 768px) {
    .header-top {
      flex-direction: column;
      gap: 16px;
      align-items: stretch;
    }

    .header-brand {
      justify-content: center;
    }
    
    .tagline {
      display: none;
    }
    
    .header-actions {
      justify-content: space-between;
    }
    
    .header-stats .stat {
      display: none;
    }
    
    .header-bottom {
      padding: 12px 0 16px 0;
    }

    .search-suggestions {
      justify-content: center;
    }

    .suggestion-tag {
      font-size: 11px;
      padding: 3px 8px;
    }
  }

  @media (max-width: 480px) {
    .logo-text {
      font-size: 18px;
    }
    
    .header-links {
      gap: 4px;
    }
    
    .header-link {
      padding: 6px 8px;
      font-size: 13px;
    }

    .search-input {
      font-size: 14px;
      padding: 12px 14px;
    }

    .search-submit {
      padding: 12px 14px;
    }
  }
</style>

<script>
  // Search suggestions functionality
  document.querySelectorAll('.suggestion-tag').forEach(tag => {
    tag.addEventListener('click', () => {
      const searchTerm = tag.getAttribute('data-search');
      const searchInput = document.querySelector('.search-input') as HTMLInputElement;
      if (searchInput && searchTerm) {
        searchInput.value = searchTerm;
        searchInput.focus();
      }
    });
  });

  // Auto-submit on suggestion click
  document.querySelectorAll('.suggestion-tag').forEach(tag => {
    tag.addEventListener('click', () => {
      const form = document.querySelector('.enhanced-search') as HTMLFormElement;
      if (form) {
        setTimeout(() => form.submit(), 100);
      }
    });
  });
</script>